{"version":3,"file":"animation-timeline.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/timelineEventsEmitter.ts","webpack:///./src/enums/timelineKeyframeShape.ts","webpack:///./src/utils/timelineUtils.ts","webpack:///./src/settings/defaults/defaultGroupStyle.ts","webpack:///./src/settings/defaults/defaultTimelineKeyframeStyle.ts","webpack:///./src/settings/defaults/defaultTimelineRowStyle.ts","webpack:///./src/utils/timelineStyleUtils.ts","webpack:///./src/enums/timelineElementType.ts","webpack:///./src/utils/timelineDraggableData.ts","webpack:///./src/utils/events/timelineBaseEvent.ts","webpack:///./src/utils/events/timelineKeyframeChangedEvent.ts","webpack:///./src/enums/timelineEventSource.ts","webpack:///./src/utils/events/timelineTimeChangedEvent.ts","webpack:///./src/enums/timelineSelectionEventSource.ts","webpack:///./src/utils/events/timelineSelectedEvent.ts","webpack:///./src/utils/events/timelineClickEvent.ts","webpack:///./src/utils/events/timelineDragEvent.ts","webpack:///./src/enums/timelineInteractionMode.ts","webpack:///./src/enums/timelineCursorType.ts","webpack:///./src/enums/timelineCapShape.ts","webpack:///./src/enums/timelineSelectionMode.ts","webpack:///./src/enums/timelineEvents.ts","webpack:///./src/enums/timelineScrollSource.ts","webpack:///./src/settings/defaults/defaultTimelineConsts.ts","webpack:///./src/settings/defaults/defaultTimelineStyle.ts","webpack:///./src/settings/defaults/defaultTimelineOptions.ts","webpack:///./src/timeline.ts","webpack:///./src/animation-timeline.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"timelineModule\"] = factory();\n\telse\n\t\troot[\"timelineModule\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable  @typescript-eslint/no-explicit-any */\ninterface TimelineEvent {\n  topic: string;\n  callback: (args: any) => void;\n}\n\n/**\n * Timeline events emitter.\n */\nexport class TimelineEventsEmitter {\n  /**\n   * Active events subscriptions.\n   */\n  _subscriptions: TimelineEvent[] = [];\n\n  /**\n   * Subscribe event.\n   * @param topic event name.\n   * @param callback callback to be added.\n   */\n  on<T>(topic: string, callback: (args: T) => void): boolean {\n    if (!callback) {\n      return false;\n    }\n\n    this._subscriptions.push({\n      topic: topic,\n      callback: callback,\n    } as TimelineEvent);\n    return true;\n  }\n  /**\n   * Remove an event from the subscriptions list.\n   */\n  off<T>(topic: string, callback: (args: T) => void): boolean {\n    const before = this._subscriptions.length;\n    this._subscriptions = this._subscriptions.filter((event) => {\n      return event && event.callback != callback && event.topic != topic;\n    });\n    return before !== this._subscriptions.length;\n  }\n\n  /**\n   * Unsubscribe all\n   */\n  offAll(): void {\n    // Remove all callbacks from array.\n    this._subscriptions.length = 0;\n  }\n\n  /**\n   * Emit event.\n   * @param topic Event name.\n   * @param args Event arguments.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  emit<T>(topic: string, args: T): void {\n    this._subscriptions.forEach((event) => {\n      if (event?.topic === topic && event?.callback) {\n        event.callback(args);\n      }\n    });\n  }\n}\n","export enum TimelineKeyframeShape {\n  None = 'none',\n  Rhomb = 'rhomb',\n  Circle = 'circle',\n  Rect = 'rect',\n}\n","import { TimelineRanged } from '../models/timelineRanged';\nimport { TimelineOptions } from '../settings/timelineOptions';\n\nconst denominators = [1, 2, 5, 10];\nexport class TimelineUtils {\n  static drawLine(ctx: CanvasRenderingContext2D, x1: number, y1: number, x2: number, y2: number): void {\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n  }\n  /**\n   * Check is valid number.\n   */\n  static isNumber(val?: number | null): boolean {\n    if (typeof val === 'number' && (val || val === 0) && !isNaN(val) && Number.isFinite(val)) {\n      return true;\n    }\n\n    return false;\n  }\n  static deleteElement<T>(array: Array<T>, element: T): Array<T> {\n    const index: number = array.indexOf(element);\n    if (index !== -1) {\n      return array.splice(index, 1);\n    }\n    return array;\n  }\n\n  /**\n   * Check rectangle overlap x,y\n   */\n  static isOverlap(x: number, y: number, rectangle: DOMRect): boolean {\n    if (!rectangle) {\n      return false;\n    }\n\n    if (rectangle.x <= x && rectangle.x + rectangle.width >= x && rectangle.y <= y && rectangle.y + rectangle.height >= y) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Find beautiful step for the header line gauge.\n   */\n  static findGoodStep(originalStep: number, divisionCheck = 0): number {\n    if (originalStep <= 0 || isNaN(originalStep) || !Number.isFinite(originalStep)) {\n      return originalStep;\n    }\n    let step = originalStep;\n    let lastDistance = null;\n    const pow = TimelineUtils.getPowArgument(originalStep);\n    for (let i = 0; i < denominators.length; i++) {\n      const denominator = denominators[i];\n      const calculatedStep = denominator * Math.pow(10, pow);\n      if (divisionCheck && divisionCheck % calculatedStep != 0) {\n        continue;\n      }\n      const distance = TimelineUtils.getDistance(originalStep, calculatedStep);\n\n      if (distance == 0 || (distance <= 0.1 && pow > 0)) {\n        lastDistance = distance;\n        step = calculatedStep;\n        break;\n      } else if (!lastDistance || lastDistance > distance) {\n        lastDistance = distance;\n        step = calculatedStep;\n      }\n    }\n\n    return step;\n  }\n  /**\n   * Keep value in min, max bounds.\n   */\n  static keepInBounds(value: number, min: number | null | undefined = null, max: number | null | undefined = null): number {\n    if (TimelineUtils.isNumber(value)) {\n      if (TimelineUtils.isNumber(min) && (min || min === 0)) {\n        value = Math.max(value, min);\n      }\n      if (TimelineUtils.isNumber(max) && (max || max === 0)) {\n        value = Math.min(value, max);\n      }\n    }\n\n    return value;\n  }\n  static setMinMax(to: TimelineRanged, from: TimelineRanged | null, shrink = false): TimelineRanged {\n    if (!from || !to) {\n      return to;\n    }\n    const fromMin = from ? from.min : Number.NaN;\n    const toMin = to.min;\n    const isFromMinNumber = (fromMin || fromMin === 0) && TimelineUtils.isNumber(fromMin);\n    const isToMinNumber = (toMin || toMin === 0) && TimelineUtils.isNumber(toMin);\n    // get absolute min and max bounds:\n    if (isFromMinNumber && isToMinNumber) {\n      to.min = shrink ? Math.min(fromMin, toMin) : Math.max(fromMin, toMin);\n    } else if (isFromMinNumber) {\n      to.min = fromMin;\n    }\n    const fromMax = from ? from.max : Number.NaN;\n    const toMax = to.max;\n    const isFromMaxNumber = (fromMax || fromMax === 0) && TimelineUtils.isNumber(fromMax);\n    const isToMaxNumber = (toMax || toMax === 0) && TimelineUtils.isNumber(toMax);\n    if (isFromMaxNumber && isToMaxNumber) {\n      to.max = shrink ? Math.max(fromMax, toMax) : Math.min(fromMax, toMax);\n    } else if (isFromMaxNumber) {\n      to.max = fromMax;\n    }\n\n    return to;\n  }\n  static shrinkSelf(rect: DOMRect, value: number): DOMRect {\n    if (!rect) {\n      return rect;\n    }\n    rect.x -= value;\n    rect.y -= value;\n    rect.width += value;\n    rect.height += value;\n    return rect;\n  }\n  /**\n   * Check whether rectangle intersects another rectangle\n   */\n  static isRectIntersects(rect: DOMRect, rect2: DOMRect, touch = false): boolean {\n    if (!rect || !rect2) {\n      console.log('Rectangles cannot be empty');\n      return false;\n    }\n    const right = rect2.x + rect2.width;\n    const bottom = rect2.y + rect2.height;\n    if (touch) {\n      if (\n        // Left\n        rect.x <= right &&\n        // Right\n        rect2.x <= rect.x + rect.width &&\n        // Top\n        rect.y <= bottom &&\n        // Bottom\n        rect2.y <= rect.y + rect.height\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (\n        // Left\n        rect.x < right &&\n        // Right\n        rect2.x < rect.x + rect.width &&\n        // Top\n        rect.y < bottom &&\n        // Bottom\n        rect2.y < rect.y + rect.height\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  static getDistance(x1: number, y1: number, x2?: number, y2?: number): number {\n    if (x2 != undefined && y2 != undefined) {\n      return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n    } else {\n      return Math.abs(x1 - y1);\n    }\n  }\n\n  /**\n   * Get sign of the number. 1 or -1.\n   */\n  static sign(p: number): number {\n    return p >= 0 ? 1 : -1;\n  }\n\n  /**\n   * Clear browser text selection.\n   */\n  static clearBrowserSelection(): void {\n    if (!window) {\n      return;\n    }\n    if (window.getSelection) {\n      const selection = window.getSelection();\n      if (selection) {\n        selection.removeAllRanges();\n      }\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const doc: any = window.document;\n      if (doc.selection) {\n        doc.selection.empty();\n      }\n    }\n  }\n  static getPowArgument(toCheck: number): number {\n    if (!toCheck || toCheck === 0 || !isFinite(toCheck)) {\n      return 1;\n    }\n    // some optimization for numbers:\n    if (toCheck >= 10 && toCheck < 100) {\n      return 1;\n    } else if (toCheck >= 100 && toCheck < 1000) {\n      return 2;\n    } else if (toCheck >= 1000 && toCheck < 10000) {\n      return 3;\n    }\n\n    toCheck = Math.abs(toCheck);\n    let category = 0;\n    const s = this.sign(toCheck);\n    if (toCheck > 1) {\n      while (toCheck >= 1) {\n        toCheck = Math.floor(toCheck / 10.0);\n        category++;\n      }\n\n      return s * category - 1;\n    } else if (toCheck > 0.0) {\n      // Get number of zeros before the number.\n      const zerosCount = Math.floor(Math.log(toCheck) / Math.log(10) + 1) - 1;\n      return zerosCount;\n    } else {\n      return 1;\n    }\n  }\n\n  static deepClone = <T>(previousOptions: T): T => {\n    return JSON.parse(JSON.stringify(previousOptions)) as T;\n  };\n\n  static cloneOptions = (previousOptions: TimelineOptions): TimelineOptions => {\n    const clonedValue = JSON.parse(\n      JSON.stringify(previousOptions, (key, value) => {\n        // No need to clone HTML element passed as ID.\n        return key === 'id' ? undefined : value;\n      }),\n    );\n    clonedValue.id = previousOptions.id;\n    return clonedValue;\n  };\n  /**\n   * Merge options. New keys will be added.\n   */\n  static mergeOptions(previousOptions: TimelineOptions, newOptions: TimelineOptions): TimelineOptions {\n    newOptions = newOptions || ({} as TimelineOptions);\n    // Apply incoming options to default. (override default)\n    // Deep clone default options:\n    const toArg = TimelineUtils.cloneOptions(previousOptions);\n    // Merge options with the default.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const mergeOptionsDeep = (to: any, from: any): void => {\n      if (!to || !from) {\n        return;\n      }\n      // eslint-disable-next-line prefer-const\n      for (let key in from) {\n        if (Object.prototype.hasOwnProperty.call(from, key)) {\n          if (from[key] !== undefined) {\n            if (typeof from[key] === 'object') {\n              if (key === 'id') {\n                if (from[key] && from[key] !== to[key]) {\n                  to[key] = from[key];\n                }\n              } else {\n                if (!to[key]) {\n                  to[key] = from[key];\n                } else {\n                  mergeOptionsDeep(to[key], from[key]);\n                }\n              }\n            } else {\n              to[key] = from[key];\n            }\n          }\n        }\n      }\n    };\n\n    mergeOptionsDeep(toArg, newOptions);\n    return toArg;\n  }\n  /**\n   * Format numbers with len\n   */\n  static timePadZero(num: number, len = 2): string {\n    let str = String(num);\n    const threshold = Math.pow(10, len - 1);\n    if (num < threshold) {\n      while (String(threshold).length > str.length) {\n        str = `0${num}`;\n      }\n    }\n    return str;\n  }\n}\n","import { TimelineGroupStyle } from '../styles/timelineGroupStyle';\nexport const defaultRowHeight = 24;\nconst margin = 4;\nexport const defaultGroupStyle = {\n  height: 'auto',\n  marginTop: margin,\n  /**\n   * Default group fill color.\n   */\n  fillColor: '#094771',\n} as TimelineGroupStyle;\n","import { TimelineKeyframeShape } from '../../enums/timelineKeyframeShape';\nimport { TimelineKeyframeStyle } from '../styles/timelineKeyframeStyle';\n\nexport const defaultTimelineKeyframeStyle = {\n  /**\n   * keyframe fill color.\n   */\n  fillColor: 'DarkOrange',\n  shape: TimelineKeyframeShape.Rhomb,\n  /**\n   * Selected keyframe fill color.\n   */\n  selectedFillColor: 'red',\n  strokeColor: 'black',\n  selectedStrokeColor: 'black',\n  strokeThickness: 0.2,\n  height: 'auto',\n  width: 'auto',\n} as TimelineKeyframeStyle;\n","import { TimelineRowStyle } from '../styles/timelineRowStyle';\nimport { defaultGroupStyle, defaultRowHeight } from './defaultGroupStyle';\nimport { defaultTimelineKeyframeStyle } from './defaultTimelineKeyframeStyle';\n\nexport const defaultTimelineRowStyle = {\n  /**\n   * Row height in pixels.\n   */\n  height: defaultRowHeight,\n  marginBottom: 2,\n  fillColor: '#252526',\n  /**\n   * Style for the all keyframes in a current row.\n   * Individual keyframe can have own style.\n   */\n  keyframesStyle: defaultTimelineKeyframeStyle,\n  /**\n   * Style of the groups.\n   */\n  groupsStyle: defaultGroupStyle,\n} as TimelineRowStyle;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { TimelineOptions } from '../settings/timelineOptions';\nimport { TimelineRowStyle } from '../settings/styles/timelineRowStyle';\nimport { TimelineKeyframeShape } from '../enums/timelineKeyframeShape';\nimport { TimelineUtils } from './timelineUtils';\nimport { TimelineGroupStyle } from '../settings/styles/timelineGroupStyle';\nimport { TimelineKeyframe } from '../models/timelineKeyframe';\n\nimport { TimelineGroup } from '../models/timelineGroup';\nimport { TimelineRow } from '../models/timelineRow';\nimport { defaultGroupStyle } from '../settings/defaults/defaultGroupStyle';\nimport { defaultTimelineKeyframeStyle } from '../settings/defaults/defaultTimelineKeyframeStyle';\nimport { defaultTimelineRowStyle } from '../settings/defaults/defaultTimelineRowStyle';\n\nconst undefinedConst = typeof undefined;\n\n// TODO: create merged style for each element instead of getting per property.\nexport class TimelineStyleUtils {\n  static getGroup(groupModel: TimelineGroup | string | null | undefined): TimelineGroup | null {\n    const style = groupModel;\n    if (style && typeof style === 'string') {\n      return null;\n    }\n    return (style || null) as TimelineGroup;\n  }\n  static getGroupStyle(groupModel: TimelineGroup | string | null | undefined): TimelineGroupStyle | null {\n    return TimelineStyleUtils.getGroup(groupModel)?.style || null;\n  }\n  static getFirstSet<T>(defaultValue: T, ...params: Array<T | undefined | null>): T {\n    return TimelineStyleUtils.getValue(defaultValue, false, ...params);\n  }\n  /**\n   * Get first value set or default.\n   * @param defaultValue default value in a case when no value is set.\n   * @param returnFalseIfAnyFalse - find first negative bool and return false.\n   * @param params collection of values to check.\n   * @returns value.\n   */\n  static getValue<T>(defaultValue: T, returnFalseIfAnyFalse = false, ...params: Array<T | undefined | null>): T {\n    const valuesFound: T[] = [];\n    let found = false;\n    params.forEach((value: T | undefined | null) => {\n      if (found) {\n        return;\n      }\n      if (typeof value === undefinedConst) {\n        return;\n      } else if (typeof value === 'number') {\n        if (!TimelineUtils.isNumber(value)) {\n          return;\n        }\n      } else if (typeof value === 'boolean') {\n        valuesFound.push(value as T);\n        // No need to search for other values. First false is turning off current bool functionality.\n        if (returnFalseIfAnyFalse && value === false) {\n          found = true;\n        }\n        return;\n      } else if (!value) {\n        return;\n      }\n      valuesFound.push(value as T);\n    });\n    const toReturn = valuesFound && valuesFound.length > 0 ? valuesFound[0] : defaultValue;\n    if (found) {\n      return false as T;\n    }\n    return TimelineStyleUtils.getValueOrDefault(toReturn, defaultValue) as T;\n  }\n\n  static getValueOrDefault<T>(value: T, defaultValue: T): T | undefined {\n    if (typeof value === undefinedConst) {\n      return defaultValue;\n    } else if (typeof value == 'boolean') {\n      // variable is a boolean\n      return value as T;\n    } else if (typeof value == 'number') {\n      // variable is a boolean\n      if (value || value === 0) {\n        return value as T;\n      } else {\n        return defaultValue;\n      }\n    }\n    return value || defaultValue;\n  }\n  static keyframeWidth(\n    keyframe: TimelineKeyframe | null | undefined,\n    group: TimelineGroup | string | null | undefined,\n    rowStyle: TimelineRowStyle | null | undefined,\n    options: TimelineOptions | null | undefined,\n  ): number | string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultTimelineKeyframeStyle.width || '',\n      keyframe?.style?.width,\n      // exact style\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.width,\n      rowStyle?.keyframesStyle?.width,\n      rowStyle?.groupsStyle?.keyframesStyle?.width,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.keyframesStyle?.width,\n      // default keyframe style\n      options?.rowsStyle?.keyframesStyle?.width,\n    );\n  }\n  static keyframeHeight(\n    keyframe: TimelineKeyframe | null | undefined,\n    group: TimelineGroup | string | null | undefined,\n    rowStyle: TimelineRowStyle | null | undefined,\n    options: TimelineOptions | null | undefined,\n  ): number | string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultTimelineKeyframeStyle.height || '',\n      keyframe?.style?.height,\n      // exact style\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.height,\n      rowStyle?.keyframesStyle?.height,\n      rowStyle?.groupsStyle?.keyframesStyle?.height,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.keyframesStyle?.height,\n      // default keyframe style\n      options?.rowsStyle?.keyframesStyle?.height,\n    );\n  }\n  static keyframeShape(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): TimelineKeyframeShape {\n    const defaultValue = defaultTimelineKeyframeStyle.shape || TimelineKeyframeShape.Rhomb;\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.shape,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.shape,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.shape,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.shape,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.shape : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.shape,\n    );\n  }\n  static keyframeFillColor(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineKeyframeStyle.fillColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.fillColor,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.fillColor,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.fillColor,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.fillColor,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.fillColor : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.fillColor,\n    );\n  }\n  static keyframeSelectedFillColor(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineKeyframeStyle.selectedFillColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.selectedFillColor,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.selectedFillColor,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.selectedFillColor,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.selectedFillColor,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.selectedFillColor : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.selectedFillColor,\n    );\n  }\n\n  static keyframeStrokeThickness(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): number {\n    const defaultValue = defaultTimelineKeyframeStyle.strokeThickness || 0;\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.strokeThickness,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.strokeThickness,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.strokeThickness,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.strokeThickness,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.strokeThickness : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.strokeThickness,\n    );\n  }\n\n  static keyframeStrokeColor(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineKeyframeStyle.strokeColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.strokeColor,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.strokeColor,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.strokeColor,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.strokeColor,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.strokeColor : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.strokeColor,\n    );\n  }\n  static keyframeSelectedStrokeColor(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null, rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineKeyframeStyle.selectedStrokeColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      keyframe?.style?.selectedStrokeColor,\n      // style set by keyframe group\n      TimelineStyleUtils.getGroupStyle(group)?.keyframesStyle?.selectedStrokeColor,\n      // style from the keyframe group\n      rowStyle?.groupsStyle?.keyframesStyle?.selectedStrokeColor,\n      // style set by keyframe style\n      rowStyle?.keyframesStyle?.selectedStrokeColor,\n      // style set by keyframe group style, applied when group is set\n      group ? options?.rowsStyle?.groupsStyle?.keyframesStyle?.selectedStrokeColor : undefined,\n      // Style set by global options\n      options?.rowsStyle?.keyframesStyle?.selectedStrokeColor,\n    );\n  }\n\n  static groupHeight(options: TimelineOptions | null | undefined, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null | undefined): number | string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultGroupStyle.height || 'auto',\n      // exact group style\n      TimelineStyleUtils.getGroupStyle(group)?.height,\n      // Row row style\n      rowStyle?.groupsStyle?.height,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.height,\n    );\n  }\n\n  static groupMarginTop(options: TimelineOptions | null | undefined, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null | undefined): number | string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultGroupStyle.marginTop || 'auto',\n      // exact style\n      TimelineStyleUtils.getGroupStyle(group)?.marginTop,\n      // Row row style\n      rowStyle?.groupsStyle?.marginTop,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.marginTop,\n    );\n  }\n\n  static groupFillColor(options: TimelineOptions | null | undefined, group: TimelineGroup | string | null | undefined, rowStyle: TimelineRowStyle | null | undefined): string {\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultGroupStyle.fillColor || '',\n      // exact style\n      TimelineStyleUtils.getGroupStyle(group)?.fillColor,\n      // Row row style\n      rowStyle?.groupsStyle?.fillColor,\n      // global styles\n      options?.rowsStyle?.groupsStyle?.fillColor,\n    );\n  }\n\n  /**\n   * Get current row height from styles\n   */\n  static getRowHeight(rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): number {\n    const defaultValue = defaultTimelineRowStyle.height || 0;\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      rowStyle?.height,\n      // Style set by global options\n      options?.rowsStyle?.height,\n    );\n  }\n  static getRowMarginBottom(rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): number {\n    const defaultValue = defaultTimelineRowStyle.marginBottom || 0;\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      rowStyle?.marginBottom,\n      // Style set by global options\n      options?.rowsStyle?.marginBottom,\n    );\n  }\n\n  static getRowFillColor(rowStyle: TimelineRowStyle | null, options: TimelineOptions | null): string {\n    const defaultValue = defaultTimelineRowStyle.fillColor || '';\n    return TimelineStyleUtils.getFirstSet(\n      // default value\n      defaultValue,\n      // exact style\n      rowStyle?.fillColor,\n      // Style set by global options\n      options?.rowsStyle?.fillColor,\n    );\n  }\n\n  static headerHeight(options: TimelineOptions | null, defaultRowHeight = 30): number {\n    return options?.headerHeight || defaultRowHeight;\n  }\n  static keyframeDraggable(keyframe: TimelineKeyframe | null, group: TimelineGroup | string | null, row: TimelineRow | null, options: TimelineOptions | null, defaultValue = true): boolean {\n    const findFirstNegativeBool = true;\n    const boolResult = TimelineStyleUtils.getValue<boolean>(\n      defaultValue,\n      findFirstNegativeBool,\n      // Keyframe settings\n      keyframe?.draggable,\n      // Group settings\n      TimelineStyleUtils.getGroup(group)?.keyframesDraggable,\n      // Row settings\n      row?.keyframesDraggable,\n      // Start from global settings first.\n      options?.keyframesDraggable,\n    );\n    return boolResult;\n  }\n\n  static groupDraggable(group: TimelineGroup | string | null | undefined, row: TimelineRow | null, options: TimelineOptions): boolean {\n    const findFirstNegativeBool = true;\n    const boolResult = TimelineStyleUtils.getValue<boolean>(\n      true,\n      findFirstNegativeBool,\n      // Group settings\n      TimelineStyleUtils.getGroup(group)?.draggable,\n      // Row settings\n      row?.groupsDraggable,\n      // Start from global settings first.\n      options?.groupsDraggable,\n    );\n    return boolResult;\n  }\n}\n","/**\n * Internal element type.\n */\nexport enum TimelineElementType {\n  /**\n   * Timeline\n   */\n  Timeline = 'timeline',\n  /**\n   * Keyframes\n   */\n  Keyframe = 'keyframe',\n  /**\n   * Keyframes connected and presenting one group.\n   */\n  Group = 'group',\n  /**\n   * Timeline row.\n   */\n  Row = 'row',\n  None = 'none',\n}\n","import { TimelineElementType } from '../enums/timelineElementType';\nimport { TimelineElementDragState } from './timelineElementDragState';\n\n/**\n * Information about current drag state.\n */\nexport class TimelineDraggableData {\n  /**\n   * Whether position was changed.\n   */\n  changed = false;\n  /**\n   * Drag initial click target.\n   */\n  target!: TimelineElementDragState;\n  /**\n   * Elements to be dragged.\n   * Can be multiple elements, but drag will be started with target.\n   */\n  elements!: TimelineElementDragState[];\n  /**\n   * Dragging type.\n   */\n  type: TimelineElementType = TimelineElementType.None;\n  /**\n   * Prev value.\n   */\n  val!: number;\n  /**\n   * Prev value.\n   */\n  prevVal!: number;\n}\n","/**\n * Timeline base preventable event.\n */\nexport class TimelineBaseEvent {\n  private _prevented = false;\n  /**\n   * Prevent default click logic.\n   */\n  preventDefault(): void {\n    this._prevented = true;\n  }\n\n  isPrevented(): boolean {\n    return this._prevented;\n  }\n}\n","import { TimelineBaseEvent } from './timelineBaseEvent';\nimport { TimelineElement } from '../timelineElement';\nimport { TimelineEventSource } from '../../enums/timelineEventSource';\n\nexport class TimelineKeyframeChangedEvent extends TimelineBaseEvent {\n  /**\n   * Value to be used.\n   */\n  val!: number;\n  /**\n   * Previous value.\n   */\n  prevVal!: number;\n  /**\n   * Target element\n   */\n  target!: TimelineElement;\n  /**\n   * Event source.\n   */\n  source!: TimelineEventSource;\n}\n","export enum TimelineEventSource {\n  /**\n   * Changed by user interaction events.\n   */\n  User = 'user',\n  /**\n   * Changed programmatically.\n   */\n  Programmatically = 'programmatically',\n  /**\n   * Changed by the set time function.\n   */\n  SetTimeMethod = 'setTimeMethod',\n}\n","import { TimelineBaseEvent } from './timelineBaseEvent';\nimport { TimelineEventSource } from '../../enums/timelineEventSource';\n\nexport class TimelineTimeChangedEvent extends TimelineBaseEvent {\n  /**\n   * New value to be set if not prevented.\n   */\n  val = 0;\n  /**\n   * previous value, that actually set at the moment.\n   */\n  prevVal = 0;\n  /**\n   * Source of the change.\n   */\n  source: TimelineEventSource = TimelineEventSource.User;\n}\n","/**\n * Timeline selection event type.\n */\nexport enum TimelineSelectionEventSource {\n  /**\n   * Keyframe selection is performed.\n   */\n  Keyframes = 'keyframes',\n}\n","import { TimelineSelectionEventSource } from '../../enums/timelineSelectionEventSource';\nimport { TimelineKeyframe } from '../../models/timelineKeyframe';\n\nexport class TimelineSelectedEvent {\n  /**\n   * Selected Keyframes list.\n   */\n  selected: TimelineKeyframe[] = [];\n  /**\n   * Changed selection.\n   */\n  changed: TimelineKeyframe[] = [];\n  /**\n   * Selection mode.\n   */\n  mode: TimelineSelectionEventSource = TimelineSelectionEventSource.Keyframes;\n}\n","import { TimelineElement } from '../timelineElement';\nimport { TimelinePoint } from '../timelinePoint';\nimport { TimelineBaseEvent } from './timelineBaseEvent';\n\nexport class TimelineClickEvent extends TimelineBaseEvent {\n  args: MouseEvent | TouchEvent | null = null;\n  /**\n   * Clicked screen position.\n   */\n  get pos(): DOMPoint | null {\n    return this.point?.pos || null;\n  }\n  get val(): number {\n    if (this.point) {\n      return this.point.val;\n    }\n    return NaN;\n  }\n  /**\n   * All elements located under current mouse activity.\n   */\n  elements: TimelineElement[] = [];\n  /**\n   * Element that selected as target under the click.\n   */\n  target: TimelineElement | null = null;\n  /**\n   * Timeline current active drag position.\n   */\n  point: TimelinePoint | null = null;\n}\n","import { TimelinePoint } from '../timelinePoint';\nimport { TimelineBaseEvent } from './timelineBaseEvent';\nimport { TimelineElementDragState } from '../timelineElementDragState';\n\nexport class TimelineDragEvent extends TimelineBaseEvent {\n  args: MouseEvent | TouchEvent | null = null;\n  get pos(): DOMPoint | null {\n    return this.point?.pos || null;\n  }\n  /**\n   * Elements to be dragged as a group.\n   */\n  elements: TimelineElementDragState[] | null = null;\n  /**\n   * Target element\n   */\n  target: TimelineElementDragState | null = null;\n  /**\n   * Timeline current active drag position.\n   */\n  point: TimelinePoint | null = null;\n  /**\n   * Timeline previous drag position.\n   */\n  prevPoint: TimelinePoint | null = null;\n}\n","export enum TimelineInteractionMode {\n  /**\n   * Keyframe selection tool selecting single or group of keyframes.\n   */\n  Selection = 'selection',\n  /**\n   * Pan tool with the possibility to select keyframes.\n   */\n  Pan = 'pan',\n  /**\n   * Allow only pan without any keyframes interaction.\n   * Timeline still can be moved and controlled by option 'timelineDraggable'.\n   */\n  NonInteractivePan = 'nonInteractivePan',\n  /**\n   * Zoom tool.\n   */\n  Zoom = 'zoom',\n\n  /**\n   * No iteraction, except moving a timeline.\n   * Timeline still can be moved and controlled by option 'timelineDraggable'.\n   */\n  None = 'none',\n}\n","export enum TimelineCursorType {\n  Alias = 'alias',\n  AllScroll = 'all-scroll',\n  Auto = 'auto',\n  Cell = 'cell',\n  ContextMenu = 'context-menu',\n  ColResize = 'col-resize',\n  Copy = 'copy',\n  Crosshair = 'crosshair',\n  Default = 'default',\n  EResize = 'e-resize',\n  EWResize = 'ew-resize',\n  Grab = 'grab',\n  Grabbing = 'grabbing',\n  Help = 'help',\n  Move = 'move',\n  NResize = 'n-resize',\n  NEResize = 'ne-resize',\n  NESWResize = 'nesw-resize',\n  NSResize = 'ns-resize',\n  NWResize = 'nw-resize',\n  NWSEResize = 'nwse-resize',\n  NoDrop = 'no-drop',\n  None = 'none',\n  NotAllowed = 'not-allowed',\n  Pointer = 'pointer',\n  Progress = 'progress',\n  RowResize = 'row-resize',\n  SResize = 's-resize',\n  SEResize = 'se-resize',\n  SWResize = 'sw-resize',\n  Text = 'text',\n  WResize = 'w-resize',\n  Wait = 'wait',\n  ZoomIn = 'zoom-in',\n  ZoomOut = 'zoom-out',\n}\n","export enum TimelineCapShape {\n  None = 'none',\n  Triangle = 'triangle',\n  Rect = 'rect',\n}\n","/**\n * Timeline selection mode.\n */\nexport enum TimelineSelectionMode {\n  /**\n   * Select new items. deselect changed.\n   */\n  Normal = 'normal',\n  /**\n   * Append current selection.\n   */\n  Append = 'append',\n  /**\n   * Revert selection of a specified nodes.\n   */\n  Revert = 'revert',\n}\n","/**\n * Event names of the component.\n */\nexport enum TimelineEvents {\n  Selected = 'selected',\n  TimeChanged = 'timechanged',\n  KeyframeChanged = 'keyframeChanged',\n  DragStarted = 'dragStarted',\n  Drag = 'drag',\n  DragFinished = 'dragFinished',\n  Scroll = 'scroll',\n  ScrollFinished = 'scrollFinished',\n  DoubleClick = 'doubleClick',\n  MouseDown = 'mouseDown',\n}\n","export enum TimelineScrollSource {\n  DefaultMode = 'none',\n  ZoomMode = 'zoom',\n  ScrollBySelection = 'scrollBySelection',\n}\n","import { TimelineConsts } from '../timelineConsts';\n\nexport const defaultTimelineConsts: TimelineConsts = {\n  /**\n   * Private. Auto pan speed.\n   */\n  autoPanSpeed: 50,\n  /**\n   * Private. scroll speed when mouse drag is used (from 0 to 1)\n   */\n  scrollByDragSpeed: 0.12,\n  /**\n   * Private. Determine whether item was clicked.\n   */\n  clickDetectionMs: 120,\n  /**\n   * Private. Timeout to detect double click.\n   */\n  doubleClickTimeoutMs: 400,\n  /**\n   * Private. Time in ms used to refresh scrollbars when pan is finished.\n   */\n  scrollFinishedTimeoutMs: 500,\n  /**\n   * Private. Auto pan padding\n   */\n  autoPanByScrollPadding: 10,\n  /**\n   * Private. Click threshold\n   */\n  clickThreshold: 3,\n  /**\n   * Private. Private.Click min radius for the elements detection.\n   */\n  clickDetectionMinRadius: 2,\n  /**\n   * Private. Skip some auto pan/scroll actions if they are executed more rapid than this value.\n   */\n  autoPanSpeedLimit: 10,\n  /**\n   * Private. Default auto size for the group. It's percents.\n   */\n  defaultGroupHeight: 0.7,\n} as TimelineConsts;\n","import { TimelineCapShape } from '../../enums/timelineCapShape';\nimport { TimelineCursorType } from '../../enums/timelineCursorType';\nimport { TimelineStyle } from '../styles/timelineStyle';\n\nexport const defaultTimelineStyle = {\n  width: 2,\n  marginTop: 15,\n  marginBottom: 0,\n  strokeColor: 'DarkOrange',\n  fillColor: 'DarkOrange',\n  capStyle: {\n    width: 4,\n    height: 10,\n    /**\n     * Draw timeline rectangular cap.\n     */\n    capType: TimelineCapShape.Rect,\n    strokeColor: 'DarkOrange',\n    fillColor: 'DarkOrange',\n  },\n  cursor: TimelineCursorType.EWResize,\n} as TimelineStyle;\n","import { TimelineOptions } from '../timelineOptions';\nimport { defaultGroupStyle } from './defaultGroupStyle';\nimport { defaultTimelineKeyframeStyle } from './defaultTimelineKeyframeStyle';\nimport { defaultTimelineRowStyle } from './defaultTimelineRowStyle';\nimport { defaultTimelineStyle } from './defaultTimelineStyle';\n\nexport const defaultTimelineOptions = {\n  /**\n   *  Snap all selected keyframes as a bundle during the drag.\n   */\n  snapAllKeyframesOnMove: false,\n\n  /**\n   * Check whether snapping is enabled.\n   */\n  snapEnabled: true,\n\n  /**\n   * Timeline style.\n   */\n  timelineStyle: defaultTimelineStyle,\n  /**\n   * approximate step for the timeline in pixels for 1 second\n   */\n  stepPx: 120,\n  /**\n   * Number of units that should fit into one stepPx. (1 second by a default)\n   */\n  stepVal: 1000,\n  stepSmallPx: 30,\n  /**\n   * Snap step in units. from 0 to stepVal\n   */\n  snapStep: 200,\n  /**\n   * additional left margin in pixels to start the line gauge from.\n   */\n  leftMargin: 25,\n  headerFillColor: '#101011',\n  fillColor: '#101011',\n\n  labelsColor: '#D5D5D5',\n  /**\n   * Header gauge tick color.\n   */\n  tickColor: '#D5D5D5',\n  /**\n   * Selection rectangle color.\n   */\n  selectionColor: 'White',\n\n  /**\n   * Default rows style.\n   * Can be overridden by setting style individually for each row.\n   */\n  rowsStyle: defaultTimelineRowStyle,\n\n  /**\n   * Style for the all keyframes in a current row.\n   * Individual keyframe can have own style.\n   */\n  keyframesStyle: defaultTimelineKeyframeStyle,\n  /**\n   * Style of the groups.\n   */\n  groupsStyle: defaultGroupStyle,\n  /**\n   * Header height in pixels\n   */\n  headerHeight: 30,\n  font: '11px sans-serif',\n  /**\n   * Default zoom level = 1. where screen pixels are equals to the corresponding stepVal stepPx.\n   */\n  zoom: 1,\n  /**\n   * Default zoom speed.\n   */\n  zoomSpeed: 0.1,\n  /**\n   * Max zoom value.\n   */\n  zoomMin: 0.1,\n  /**\n   * Min zoom value.\n   */\n  zoomMax: 8,\n  /**\n   * Set this to true in a MAC OS environment: The Meta key will be used instead of the Ctrl key.\n   */\n  controlKeyIsMetaKey: false,\n  /**\n   * Access the scroll container via this class for e.g. scroll bar styling.\n   */\n  scrollContainerClass: 'scroll-container',\n  /**\n   * keyframes group is draggable.\n   */\n  groupsDraggable: true,\n  /**\n   * keyframes are draggable.\n   */\n  keyframesDraggable: true,\n  /**\n   * Timeline can be dragged or position can be changed by user interaction. Default: true\n   */\n  timelineDraggable: true,\n  /**\n   * Start drawing timeline from this min point.\n   * Bounds for the keyframe dragging.\n   */\n  min: 0,\n  /**\n   * Max bounds timeline can navigate to.\n   */\n  max: Number.MAX_VALUE,\n} as TimelineOptions;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// bundle entry point\n\nimport { TimelineEventsEmitter } from './timelineEventsEmitter';\nimport { TimelineConsts } from './settings/timelineConsts';\n\n// @public timeline models\nimport { TimelineRanged } from './models/timelineRanged';\nimport { TimelineModel } from './models/timelineModel';\nimport { TimelineRow } from './models/timelineRow';\nimport { TimelineKeyframe } from './models/timelineKeyframe';\n// @public styles\nimport { TimelineOptions } from './settings/timelineOptions';\n\nimport { TimelineStyleUtils } from './utils/timelineStyleUtils';\nimport { TimelineUtils } from './utils/timelineUtils';\nimport { TimelineElement } from './utils/timelineElement';\n\n// @private helper containers.\nimport { TimelineCutBoundsRectResults } from './utils/timelineCutBoundsRectResults';\nimport { TimelineSelectionResults } from './utils/timelineSelectionResults';\nimport { TimelineMouseData } from './utils/timelineMouseData';\nimport { TimelineElementDragState } from './utils/timelineElementDragState';\nimport { TimelineDraggableData } from './utils/timelineDraggableData';\n\n// @private virtual model\nimport { TimelineGroupViewModel } from './viewModels/timelineGroupViewModel';\nimport { TimelineKeyframeViewModel } from './viewModels/timelineKeyframeViewModel';\nimport { TimelineRowViewModel } from './viewModels/timelineRowViewModel';\nimport { TimelineViewModel } from './viewModels/timelineViewModel';\n\n// @public events\nimport { TimelineKeyframeChangedEvent } from './utils/events/timelineKeyframeChangedEvent';\nimport { TimelineTimeChangedEvent } from './utils/events/timelineTimeChangedEvent';\nimport { TimelineSelectedEvent } from './utils/events/timelineSelectedEvent';\nimport { TimelineScrollEvent } from './utils/events/timelineScrollEvent';\nimport { TimelineClickEvent } from './utils/events/timelineClickEvent';\nimport { TimelineDragEvent } from './utils/events/timelineDragEvent';\n\n// @public enums\nimport { TimelineKeyframeShape } from './enums/timelineKeyframeShape';\nimport { TimelineInteractionMode } from './enums/timelineInteractionMode';\nimport { TimelineElementType } from './enums/timelineElementType';\nimport { TimelineCursorType } from './enums/timelineCursorType';\nimport { TimelineCapShape } from './enums/timelineCapShape';\nimport { TimelineEventSource } from './enums/timelineEventSource';\nimport { TimelineSelectionMode } from './enums/timelineSelectionMode';\nimport { TimelineEvents } from './enums/timelineEvents';\n// @private defaults are exposed:\n\nimport { TimelineScrollSource } from './enums/timelineScrollSource';\nimport { defaultTimelineConsts } from './settings/defaults/defaultTimelineConsts';\nimport { defaultTimelineOptions } from './settings/defaults/defaultTimelineOptions';\n\nexport class Timeline extends TimelineEventsEmitter {\n  /**\n   * component container.\n   */\n  _container: HTMLElement | null = null;\n  /**\n   * Dynamically generated canvas inside of the container.\n   */\n  _canvas: HTMLCanvasElement | null = null;\n  /**\n   * Dynamically generated scroll container.\n   */\n  _scrollContainer: HTMLElement | null = null;\n  /**\n   * Dynamically generated virtual scroll content.\n   * While canvas has no real size, this element is used to create virtual scroll on the parent element.\n   */\n  _scrollContent: HTMLElement | null = null;\n  /**\n   * Rendering context\n   */\n  _ctx: CanvasRenderingContext2D | null = null;\n  /**\n   * Components settings\n   */\n  _options!: TimelineOptions;\n  /**\n   * Drag start position.\n   */\n  _startPosMouseArgs: TimelineMouseData | null = null;\n  /**\n   * Drag scroll started position.\n   */\n  _scrollStartPos: DOMPoint | null = null;\n  /**\n   * Private. Current mouse position that is used to track values between mouse up/down events.\n   * Can be null, use public methods and properties instead.\n   */\n  _currentPos: TimelineMouseData | null = null;\n\n  /**\n   * Private. Current active mouse area selection rectangle displayed during the mouse up/down drag events.\n   */\n  _selectionRect: DOMRect | null = null;\n  /**\n   * Private. Whether selection rectangle is displayed.\n   */\n  _selectionRectEnabled = false;\n  /**\n   * Private. Information in regard of current active drag state.\n   */\n  _drag: TimelineDraggableData | null = null;\n  _startedDragWithCtrl = false;\n  _startedDragWithShiftKey = false;\n  _scrollProgrammatically = false;\n  _clickTimeout: number | null = null;\n  _lastClickTime = 0;\n  _lastClickPoint: DOMPoint | null = null;\n  _consts: TimelineConsts = defaultTimelineConsts;\n  /**\n   * Private. whether click is allowed.\n   */\n  _clickAllowed = false;\n  /**\n   * Private. scroll finished timer reference.\n   */\n  _scrollFinishedTimerRef?: number | null = null;\n  /**\n   * Private.Current timeline position.\n   * Please use public get\\set methods to properly change the timeline position.\n   */\n  _val = 0;\n  _pixelRatio = 1;\n  /**\n   * Private. Current zoom level. Please use publicly available properties to set zoom levels.\n   */\n  _currentZoom = 0;\n  /**\n   * Private. Ref for the auto pan scroll interval.\n   */\n  _intervalRef?: number | null = null;\n  /**\n   * Private.\n   * When last auto pan scroll action was started.\n   */\n  _autoPanLastActionDate = 0;\n  /**\n   * Private.\n   * Is pan mouse interactions are started.\n   */\n  _isPanStarted = false;\n  /**\n   * Private.\n   * Component interaction mode. Please use publicly available methods.\n   */\n  _interactionMode = TimelineInteractionMode.Selection;\n\n  _lastUsedArgs: MouseEvent | TouchEvent | null = null;\n  /**\n   * Private.\n   * Current set timeline model.\n   */\n  _model: TimelineModel | null = null;\n  /**\n   * Private.\n   * Indication when scroll are drag or click is started.\n   */\n  _scrollAreaClickOrDragStarted = false;\n  /**\n   * Create Timeline instance\n   * @param options Timeline settings.\n   * @param model Timeline model.\n   */\n  constructor(options: TimelineOptions | null = null, model: TimelineModel | null = null) {\n    super();\n    this._options = TimelineUtils.cloneOptions(defaultTimelineOptions);\n    // Allow to create instance without an error to perform tests.\n    if (options || model) {\n      this.initialize(options, model);\n    }\n  }\n\n  /**\n   * Initialize Timeline\n   * @param options Timeline settings.\n   * @param model Timeline model.\n   */\n  public initialize = (options: TimelineOptions | null, model: TimelineModel | null): void => {\n    this._model = model;\n    if (!options || !options.id) {\n      throw new Error(`Element cannot be empty. Should be string or DOM element.`);\n    }\n\n    this._generateContainers(options.id);\n    this._options = TimelineUtils.cloneOptions(defaultTimelineOptions);\n    if (options) {\n      this._options = this._setOptions(options);\n    }\n    this._subscribeComponentEvents();\n    this.rescale();\n    this.redraw();\n  };\n\n  /**\n   * Generate component html.\n   * @param id container.\n   */\n  _generateContainers = (id: string | HTMLElement): void => {\n    if (id instanceof HTMLElement) {\n      this._container = id as HTMLElement;\n    } else {\n      this._container = document.getElementById(id);\n    }\n\n    if (!this._container) {\n      throw new Error(`Element cannot be empty. Should be string or DOM element.`);\n    }\n\n    this._scrollContainer = document.createElement('div');\n    this._scrollContent = document.createElement('div');\n    this._canvas = document.createElement('canvas');\n\n    if (!this._canvas || !this._canvas.getContext) {\n      console.log('Cannot initialize canvas context.');\n      return;\n    }\n    this._container.innerHTML = '';\n    this._container.style.position = 'relative';\n    // Generate size container:\n    this._canvas.style.cssText =\n      'image-rendering: -moz-crisp-edges;' +\n      'image-rendering: -webkit-crisp-edges;' +\n      'image-rendering: pixelated;' +\n      'image-rendering: crisp-edges;' +\n      'user-select: none;' +\n      '-webkit-user-select: none;' +\n      '-khtml-user-select: none;' +\n      '-moz-user-select: none;' +\n      '-o-user-select: none;' +\n      'user-select: none;' +\n      'touch-action: none;' +\n      'position: relative;' +\n      '-webkit-user-drag: none;' +\n      '-khtml-user-drag: none;' +\n      '-moz-user-drag: none;' +\n      '-o-user-drag: none;' +\n      'user-drag: none;' +\n      'padding: inherit';\n\n    // Those styles are hardcoded and required for the proper scrolling.\n    this._scrollContainer.style.cssText = 'overflow: scroll;' + 'position: absolute;' + 'width:  100%;' + 'height:  100%;';\n    this._scrollContent.style.width = this._scrollContent.style.height = '100%';\n\n    // add the text node to the created div\n    this._scrollContainer.appendChild(this._scrollContent);\n    this._container.appendChild(this._scrollContainer);\n    const scrollBarWidth = this._scrollContainer.offsetWidth - this._scrollContent.clientWidth;\n    // Calculate current browser scrollbar size and add offset for the canvas\n    this._canvas.style.width = this._canvas.style.height = 'calc(100% -' + (scrollBarWidth || 17) + 'px)';\n\n    this._container.appendChild(this._canvas);\n    this._ctx = this._getCtx();\n  };\n  /**\n   * Get drawing context\n   */\n  _getCtx(): CanvasRenderingContext2D | null {\n    if (!this._canvas) {\n      return null;\n    }\n    if (this._ctx) {\n      return this._ctx;\n    }\n    this._ctx = this._canvas.getContext('2d');\n    return this._ctx;\n  }\n  /**\n   * Subscribe current component on the related events.\n   * Private. Use initialize method instead.\n   */\n  _subscribeComponentEvents = (): void => {\n    // Allow to call event multiple times, revoke current subscription and subscribe again.\n    this._unsubscribeComponentEvents();\n    if (!this._container || !this._scrollContainer || !this._canvas) {\n      throw Error(`Cannot subscribe on scroll events while one of the containers is null or empty. Please call initialize method first`);\n    }\n    if (this._container) {\n      this._container.addEventListener('wheel', this._handleWheelEvent);\n    }\n    if (this._scrollContainer) {\n      this._scrollContainer.addEventListener('scroll', this._handleScrollEvent);\n      this._scrollContainer.addEventListener('touchstart', this._handleScrollMouseDownEvent);\n      this._scrollContainer.addEventListener('mousedown', this._handleScrollMouseDownEvent);\n    }\n    document.addEventListener('keyup', this._handleKeyUp, false);\n    document.addEventListener('keydown', this._handleKeyDown, false);\n    window.addEventListener('blur', this._handleBlurEvent, false);\n    window.addEventListener('resize', this._handleWindowResizeEvent, false);\n    if (this._canvas) {\n      this._canvas.addEventListener('touchstart', this._handleMouseDownEvent, false);\n      this._canvas.addEventListener('mousedown', this._handleMouseDownEvent, false);\n    }\n    window.addEventListener('mousemove', this._handleMouseMoveEvent, false);\n    window.addEventListener('touchmove', this._handleMouseMoveEvent, false);\n    window.addEventListener('mouseup', this._handleMouseUpEvent, false);\n    window.addEventListener('touchend', this._handleMouseUpEvent, false);\n  };\n\n  /**\n   * Private. Use dispose method instead.\n   */\n  _unsubscribeComponentEvents = (): void => {\n    this._container?.removeEventListener('wheel', this._handleWheelEvent);\n\n    if (this._scrollContainer) {\n      this._scrollContainer.removeEventListener('scroll', this._handleScrollEvent);\n      this._scrollContainer.removeEventListener('touchstart', this._handleScrollMouseDownEvent);\n      this._scrollContainer.removeEventListener('mousedown', this._handleScrollMouseDownEvent);\n    } else {\n      console.warn(`Cannot unsubscribe scroll while it's already empty`);\n    }\n    window.removeEventListener('blur', this._handleBlurEvent);\n    window.removeEventListener('resize', this._handleWindowResizeEvent);\n    document.removeEventListener('keydown', this._handleKeyDown);\n    document.removeEventListener('keyup', this._handleKeyUp);\n    if (this._canvas) {\n      this._canvas.removeEventListener('touchstart', this._handleMouseDownEvent);\n      this._canvas.removeEventListener('mousedown', this._handleMouseDownEvent);\n    } else {\n      console.warn(`Cannot unsubscribe canvas while it's already empty`);\n    }\n    window.removeEventListener('mousemove', this._handleMouseMoveEvent);\n    window.removeEventListener('touchmove', this._handleMouseMoveEvent);\n    window.removeEventListener('mouseup', this._handleMouseUpEvent);\n    window.removeEventListener('touchend', this._handleMouseUpEvent);\n  };\n  /**\n   * Dispose current component: unsubscribe component and user events.\n   */\n  public dispose = (): void => {\n    // Unsubscribe all user events.\n    this.offAll();\n    // Stop times\n    this._stopAutoPan();\n    this._clearScrollFinishedTimer();\n    this._unsubscribeComponentEvents();\n    if (this._container) {\n      this._container.innerHTML = '';\n    }\n    this._container = null;\n    this._canvas = null;\n    this._scrollContainer = null;\n    this._scrollContent = null;\n    this._ctx = null;\n    this._cleanUpSelection();\n  };\n  /**\n   * On key up is received.\n   */\n  _handleKeyUp = (event: KeyboardEvent): void => {\n    if (this._interactionMode === TimelineInteractionMode.Zoom) {\n      this._setZoomCursor(event);\n    }\n  };\n  /**\n   * On key down is received.\n   */\n  _handleKeyDown = (event: KeyboardEvent): void => {\n    if (this._interactionMode === TimelineInteractionMode.Zoom) {\n      this._setZoomCursor(event);\n    }\n  };\n  _setZoomCursor = (e: MouseEvent | KeyboardEvent): void => {\n    if (this._controlKeyPressed(e)) {\n      this._setCursor(TimelineCursorType.ZoomOut);\n    } else {\n      this._setCursor(TimelineCursorType.ZoomIn);\n    }\n  };\n  _handleBlurEvent = (): void => {\n    this._cleanUpSelection(true);\n  };\n  _handleWindowResizeEvent = (): void => {\n    // Rescale and redraw\n    this.rescale();\n    this.redraw();\n  };\n\n  _clearScrollFinishedTimer = (): void => {\n    if (this._scrollFinishedTimerRef) {\n      clearTimeout(this._scrollFinishedTimerRef);\n      this._scrollFinishedTimerRef = null;\n    }\n  };\n  _handleScrollMouseDownEvent = (): void => {\n    this._scrollAreaClickOrDragStarted = true;\n  };\n  _handleScrollEvent = (args: Event): void => {\n    const scrollProgrammatically = this._scrollProgrammatically;\n    if (this._scrollProgrammatically) {\n      this._scrollProgrammatically = false;\n    }\n    // Stop previous running timeout.\n    this._clearScrollFinishedTimer();\n    // Set a timeout to run event 'scrolling end'.\n    // Auto scroll is used to repeat scroll when drag element or select items outside of the visible area.\n    this._scrollFinishedTimerRef = window.setTimeout(() => {\n      if (!this._isPanStarted) {\n        this._clearScrollFinishedTimer();\n\n        this.rescale();\n        this.redraw();\n      }\n      this._emitScrollEvent(args, scrollProgrammatically, TimelineEvents.ScrollFinished);\n    }, this._consts.scrollFinishedTimeoutMs);\n\n    this.redraw();\n    this._emitScrollEvent(args, scrollProgrammatically);\n  };\n  _controlKeyPressed = (e: MouseEvent | KeyboardEvent | TouchEvent): boolean => {\n    if (!this._options || this._options.controlKeyIsMetaKey === undefined) {\n      return e.metaKey || e.ctrlKey;\n    }\n    return this._options.controlKeyIsMetaKey || this._options.controlKeyIsMetaKey ? e.metaKey : e.ctrlKey;\n  };\n  _handleWheelEvent = (event: WheelEvent): void => {\n    if (!this._scrollContainer || !this._canvas) {\n      // Component is not initialized yet.\n      return;\n    }\n    if (this._controlKeyPressed(event)) {\n      event.preventDefault();\n      const mousePosArguments = this._getMousePos(this._canvas, event);\n      const mousePos = Math.max(0, mousePosArguments.pos.x || 0);\n      this._zoom(TimelineUtils.sign(event.deltaY), this._options.zoomSpeed || 0, mousePos);\n    } else {\n      this.scrollTop = this._scrollContainer.scrollTop + event.deltaY;\n      event.preventDefault();\n    }\n  };\n  _zoom = (direction: number, speed: number, x: number): void => {\n    if (speed && speed > 0 && speed <= 1) {\n      const deltaSpeed = TimelineUtils.getDistance(this._canvasClientWidth() / 2, x) * 0.2;\n      x = x + deltaSpeed;\n      const diff = this._canvasClientWidth() / x;\n      const val = this._fromScreen(x);\n      const zoom = direction * this._currentZoom * speed;\n      //this._options.zoom\n      this._currentZoom = this._setZoom(this._currentZoom + zoom);\n      // Get only after zoom is set\n      const zoomCenter = this.valToPx(val);\n      let newScrollLeft = Math.round(zoomCenter - this._canvasClientWidth() / diff);\n      if (newScrollLeft <= 0) {\n        newScrollLeft = 0;\n      }\n\n      this._rescaleInternal(newScrollLeft + this._canvasClientWidth(), null, TimelineScrollSource.ZoomMode);\n      this.scrollLeft = newScrollLeft;\n\n      this.redraw();\n    }\n  };\n  /**\n   * Zoom in\n   * @param speed value from 0 to 1\n   */\n  public zoomIn = (speed = this._options.zoomSpeed): void => {\n    const width = this._scrollContainer?.clientWidth || 0;\n    if (speed && width) {\n      this._zoom(1, speed, width / 2);\n    }\n  };\n  /**\n   * Zoom out.\n   * @param speed value from 0 to 1\n   */\n  public zoomOut = (speed = this._options.zoomSpeed): void => {\n    const width = this._scrollContainer?.clientWidth || 0;\n    if (speed && width) {\n      this._zoom(-1, speed, width / 2);\n    }\n  };\n  /**\n   * Set direct zoom value.\n   * @param zoom zoom value to set. percent 0-1 and etc.\n   * @param min min zoom.\n   * @param max max zoom.\n   * @return normalized value.\n   */\n  _setZoom = (zoom: number, min: number | null | undefined = null, max: number | null | undefined = null): number => {\n    min = TimelineUtils.isNumber(min) ? min : this._options?.zoomMin;\n    max = TimelineUtils.isNumber(max) ? max : this._options?.zoomMax;\n    if (TimelineUtils.isNumber(zoom)) {\n      zoom = TimelineUtils.keepInBounds(zoom, min, max);\n      zoom = zoom || 1;\n      this._currentZoom = zoom;\n      return zoom;\n    }\n\n    return zoom;\n  };\n\n  /**\n   * Set direct zoom value.\n   * @public\n   * @param zoom zoom value to set. percent 0-1 and etc.\n   * @return normalized value.\n   */\n  setZoom = (zoom: number): number => {\n    const prevZoom = this.getZoom();\n    if (prevZoom !== zoom) {\n      const zoomSet = this._setZoom(zoom);\n      if (prevZoom != zoomSet) {\n        this.rescale();\n        this.redraw();\n        return zoomSet;\n      }\n    }\n    return prevZoom;\n  };\n  /**\n   * Get current zoom level.\n   */\n  getZoom = (): number => {\n    if (TimelineUtils.isNumber(this._currentZoom)) {\n      return this._currentZoom || 1;\n    }\n    return 1;\n  };\n  _getClickDetectionRadius = (point: TimelineMouseData): number => {\n    const defaultValue = this._consts.clickDetectionMinRadius || 1;\n    return Math.max(defaultValue, point?.radius || defaultValue);\n  };\n  /**\n   * @param args\n   */\n  _handleMouseDownEvent = (args: MouseEvent | TouchEvent): void => {\n    // Prevent drag of the canvas if canvas is selected as text:\n    TimelineUtils.clearBrowserSelection();\n    if (!this._canvas || !this._scrollContainer) {\n      this._cleanUpSelection();\n      return;\n    }\n    this._startPosMouseArgs = this._trackMousePos(this._canvas, args);\n\n    if (!this._startPosMouseArgs) {\n      return;\n    }\n    let isDoubleClick = Date.now() - this._lastClickTime < this._consts.doubleClickTimeoutMs;\n    // Don't allow to perform double click if mouse was moved to far.\n    if (\n      this._lastClickPoint &&\n      this._startPosMouseArgs &&\n      TimelineUtils.getDistance(this._lastClickPoint.x, this._lastClickPoint.y, this._startPosMouseArgs.pos.x, this._startPosMouseArgs.pos.y) > this._consts.clickThreshold\n    ) {\n      isDoubleClick = false;\n    }\n\n    this._lastClickPoint = this._startPosMouseArgs.pos;\n    this._scrollStartPos = { x: this._scrollContainer.scrollLeft, y: this._scrollContainer.scrollTop } as DOMPoint;\n    this._clickAllowed = true;\n    let onlyElements: TimelineElementType[] | null = null;\n    if (this._interactionMode === TimelineInteractionMode.NonInteractivePan || this._interactionMode === TimelineInteractionMode.None) {\n      // Allow to select only timeline. Timeline position can be disabled/enabled by properties.\n      onlyElements = [TimelineElementType.Timeline];\n    }\n    const clickRadius = this._getClickDetectionRadius(this._startPosMouseArgs);\n    const elements = this.elementFromPoint(this._startPosMouseArgs.pos, clickRadius, onlyElements);\n\n    const target = this._findDraggableElement(elements, this._startPosMouseArgs.val);\n    // Create click event\n    const event = new TimelineClickEvent();\n    event.point = this._startPosMouseArgs;\n    event.args = args;\n    // all elements under the click:\n    event.elements = elements;\n    // target element.\n    event.target = target;\n\n    if (isDoubleClick) {\n      super.emit(TimelineEvents.DoubleClick, event);\n      return;\n    }\n\n    super.emit(TimelineEvents.MouseDown, event);\n\n    this._clickTimeout = Date.now();\n    this._lastClickTime = Date.now();\n    if (event.isPrevented()) {\n      // Mouse up will be also prevented\n      this._cleanUpSelection();\n      return;\n    }\n\n    this._currentPos = this._startPosMouseArgs;\n\n    // Select keyframes on mouse down\n    if (target && this._interactionMode !== TimelineInteractionMode.Zoom) {\n      this._drag = new TimelineDraggableData();\n      this._drag.val = target.val;\n      this._drag.type = target.type;\n      this._drag.target = this._setElementDragState(target, target.val);\n\n      if (target.type === TimelineElementType.Keyframe) {\n        this._startedDragWithCtrl = this._controlKeyPressed(args);\n        this._startedDragWithShiftKey = args.shiftKey;\n        // get all related selected keyframes if we are selecting one.\n        if (target?.keyframe && !target?.keyframe?.selected && !this._controlKeyPressed(args)) {\n          this._selectInternal(target.keyframe);\n        }\n        // Allow to drag all selected keyframes on a screen\n        this._drag.elements = this.getSelectedElements().map((element) => {\n          return this._setElementDragState(element, element.val);\n        });\n      } else if (target.type === TimelineElementType.Group) {\n        const keyframes = this._drag.target.keyframes;\n\n        if (keyframes && Array.isArray(keyframes)) {\n          this._drag.elements = keyframes.map((keyframe) => {\n            return this._setElementDragState(this._convertToTimelineElement(this._drag?.target.row || null, keyframe), keyframe.val);\n          });\n        }\n      } else {\n        this._drag.elements = [this._drag.target];\n      }\n    }\n\n    this.redraw();\n  };\n  _setElementDragState = (element: TimelineElement | TimelineElementDragState, val: number): TimelineElementDragState => {\n    const state = element as TimelineElementDragState;\n    state.prevVal = state.val;\n    if (state.startedVal === undefined || state.startedVal === null) {\n      state.startedVal = val;\n    }\n    if (state.prevVal === undefined || state.prevVal === null) {\n      state.prevVal = val;\n    }\n    state.val = val;\n    return state;\n  };\n  /**\n   * Check is mouse left button is clicked.\n   */\n  isLeftButtonClicked = (args: MouseEvent | TouchEvent | any): boolean => {\n    return !!args && args.buttons == 1;\n  };\n\n  /**\n   * Browser mouse move handler.\n   */\n  _handleMouseMoveEvent = (args: MouseEvent | TouchEvent | null): void => {\n    if (!args) {\n      args = this._lastUsedArgs;\n    } else {\n      this._lastUsedArgs = args;\n    }\n    if (!args || !this._canvas) {\n      return;\n    }\n    const touchEventArgs = args as TouchEvent;\n    const isTouch = touchEventArgs.changedTouches && touchEventArgs.changedTouches.length > 0;\n    this._currentPos = this._trackMousePos(this._canvas, args);\n    if (!this._isPanStarted && this._selectionRect && this._clickTimeoutIsOver()) {\n      // TODO: implement selection by rect\n      if (this._interactionMode === TimelineInteractionMode.None || this._interactionMode === TimelineInteractionMode.Zoom || this._interactionMode === TimelineInteractionMode.NonInteractivePan) {\n        this._selectionRectEnabled = false;\n      } else {\n        this._selectionRectEnabled = true;\n      }\n    } else {\n      this._selectionRectEnabled = false;\n    }\n\n    args = args as MouseEvent;\n    const isLeftClicked = this.isLeftButtonClicked(args);\n    if (!isLeftClicked) {\n      this._scrollAreaClickOrDragStarted = false;\n    }\n    // On dragging is started.\n    if (this._startPosMouseArgs) {\n      // On left button is on hold by the user\n      if (isLeftClicked || isTouch) {\n        if (this._drag && !this._startedDragWithCtrl) {\n          const convertedVal = this._currentPos.val;\n          if (this._drag.type === TimelineElementType.Timeline) {\n            this._setTimeInternal(convertedVal, TimelineEventSource.User);\n          } else if ((this._drag.type == TimelineElementType.Keyframe || this._drag.type == TimelineElementType.Group) && this._drag.elements) {\n            const offset = Math.floor(convertedVal - this._drag.val);\n            const movedOffset = this._moveElements(offset, this._drag.elements, TimelineEventSource.User);\n            if (movedOffset !== 0) {\n              if (!this._drag.changed) {\n                this._drag.prevVal = this._drag.val;\n                const eventArgs = this._emitDragStartedEvent(this._drag);\n                if (!eventArgs || eventArgs.isPrevented()) {\n                  // Cleanup drag here, so drag finished will be ignored.\n                  this._cleanUpSelection(true);\n                  this._drag = null;\n                  return;\n                }\n              }\n\n              this._drag.changed = true;\n              this._drag.val += offset;\n              this._emitDragEvent(this._drag);\n            }\n          }\n        }\n\n        if ((this._interactionMode === TimelineInteractionMode.Pan || this._interactionMode === TimelineInteractionMode.NonInteractivePan) && !this._drag) {\n          this._isPanStarted = true;\n          this._setCursor(TimelineCursorType.Grabbing);\n          // Track scroll by drag.\n          this._scrollByPan(this._startPosMouseArgs.pos, this._currentPos.pos, this._scrollStartPos);\n        } else {\n          if (this._interactionMode !== TimelineInteractionMode.None) {\n            // Track scroll by mouse or touch out of the area.\n            this._scrollBySelectionOutOfBounds(this._currentPos.pos);\n          }\n        }\n\n        this.redraw();\n      } else {\n        // Fallback. Cancel mouse move when focus was lost and mouse down is still counted.\n        this._cleanUpSelection(true);\n        this.redraw();\n      }\n    } else if (!isTouch) {\n      // Set mouse over cursors\n      let onlyElements: TimelineElementType[] | null = null;\n      if (this._interactionMode === TimelineInteractionMode.NonInteractivePan || this._interactionMode === TimelineInteractionMode.None) {\n        // Allow to select only timeline. Timeline position can be disabled/enabled by properties.\n        onlyElements = [TimelineElementType.Timeline];\n      }\n      const clickRadius = this._getClickDetectionRadius(this._currentPos);\n      const elements = this.elementFromPoint(this._currentPos.pos, clickRadius, onlyElements);\n      const target = this._findDraggableElement(elements, this._currentPos.val);\n      if (this._isPanStarted || this._interactionMode === TimelineInteractionMode.Pan || this._interactionMode === TimelineInteractionMode.NonInteractivePan) {\n        if (isLeftClicked) {\n          this._setCursor(TimelineCursorType.Grabbing);\n        } else {\n          this._setCursor(TimelineCursorType.Grab);\n        }\n      } else {\n        if (this._interactionMode === TimelineInteractionMode.Zoom) {\n          this._setZoomCursor(args);\n          return;\n        } else {\n          this._setCursor(TimelineCursorType.Default);\n        }\n      }\n\n      if (target) {\n        let cursor: TimelineCursorType | null = null;\n        if (target.type === TimelineElementType.Group) {\n          cursor = cursor || TimelineCursorType.EWResize;\n        } else if (target.type == TimelineElementType.Keyframe) {\n          cursor = cursor || TimelineCursorType.Pointer;\n        } else if (target.type == TimelineElementType.Timeline) {\n          cursor = cursor || this._options?.timelineStyle?.cursor || null;\n        }\n\n        if (cursor) {\n          this._setCursor(cursor);\n        }\n      }\n    }\n\n    if (isTouch) {\n      args.preventDefault();\n    }\n  };\n\n  /**\n   * Move elements\n   * @param offset vector to move elements along.\n   * @param elements Element to move.\n   * @returns real moved value.\n   */\n  _moveElements(offset: number, elements: TimelineElementDragState[], source: TimelineEventSource = TimelineEventSource.Programmatically): number {\n    if (!elements) {\n      return 0;\n    }\n    let isChanged = false;\n    if (Math.abs(offset) > 0) {\n      // Find drag min and max bounds:\n      let bounds = { min: Number.MIN_SAFE_INTEGER, max: Number.MAX_SAFE_INTEGER } as TimelineRanged;\n      // Set min max from the options.\n      bounds = TimelineUtils.setMinMax(bounds, this._options);\n      elements.forEach((p) => {\n        if (!p || !p.keyframe) {\n          return;\n        }\n        // find allowed bounds for the draggable items.\n        // find for each row and keyframe separately.\n        const currentBounds = TimelineUtils.setMinMax(TimelineUtils.setMinMax({ min: bounds.min, max: bounds.max }, p.keyframe), p.row || null);\n        const expectedKeyframeValue = this._options?.snapAllKeyframesOnMove ? this.snapVal(p.keyframe.val) : p.keyframe.val;\n        const newPosition = expectedKeyframeValue + offset;\n        // Check that move offset will hit min bounds\n        if ((currentBounds.min || currentBounds.min === 0) && TimelineUtils.isNumber(currentBounds.min) && newPosition < currentBounds.min) {\n          // Return to the bounds:\n          offset = offset + TimelineUtils.getDistance(currentBounds.min, newPosition);\n        }\n        if ((currentBounds.max || currentBounds.max === 0) && TimelineUtils.isNumber(currentBounds.max) && newPosition > currentBounds.max) {\n          // Return to the bounds:\n          offset = offset - TimelineUtils.getDistance(currentBounds.max, newPosition);\n        }\n      });\n\n      if (Math.abs(offset) > 0) {\n        // don't allow to move less than zero offset.\n        elements.forEach((element) => {\n          if (!element?.keyframe) {\n            return;\n          }\n          const prevVal = element.keyframe.val;\n          const toSet = prevVal + offset;\n          const newValue = this._setKeyframePos(element, toSet, source);\n          isChanged = newValue !== prevVal;\n        });\n      }\n\n      if (isChanged) {\n        return offset;\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Mouse up handler.\n   */\n  _handleMouseUpEvent = (args: MouseEvent | TouchEvent): void => {\n    this._scrollAreaClickOrDragStarted = false;\n    if (!this._canvas) {\n      return;\n    }\n    if (this._startPosMouseArgs) {\n      //window.releaseCapture();\n      const pos = this._trackMousePos(this._canvas, args);\n\n      // Click detection.\n      if (this._clickAllowed || !this._clickTimeoutIsOver() || (this._drag && (this._startedDragWithCtrl || this._startedDragWithShiftKey))) {\n        if (this._options && this._interactionMode === TimelineInteractionMode.Zoom) {\n          const direction = this._controlKeyPressed(args) ? 1 : -1;\n          const mouseArgs = this._getMousePos(this._canvas, args);\n          const mousePos = Math.max(0, mouseArgs.pos.x || 0);\n          this._zoom(direction, this._options.zoomSpeed || 0, mousePos);\n        } else {\n          this._performClick(pos, this._drag);\n        }\n      } else if (!this._drag && this._selectionRect && this._selectionRectEnabled) {\n        if (this._interactionMode === TimelineInteractionMode.Zoom) {\n          // TODO: implement zoom by screen rect.\n        } else if (this._interactionMode !== TimelineInteractionMode.None) {\n          const keyframes = this._getKeyframesByRectangle(this._selectionRect);\n          const selectionMode = args.shiftKey ? TimelineSelectionMode.Append : TimelineSelectionMode.Normal;\n          this.select(keyframes, selectionMode);\n        }\n      }\n\n      this._cleanUpSelection();\n      this.redraw();\n    }\n  };\n\n  /**\n   * Canvas client height.\n   */\n  _canvasClientHeight = (): number => {\n    if (this._canvas) {\n      return this._canvas.clientHeight;\n    }\n    return 0;\n  };\n\n  /**\n   * Canvas client width.\n   */\n  _canvasClientWidth = (): number => {\n    if (this._canvas) {\n      return this._canvas.clientWidth;\n    }\n    return 0;\n  };\n\n  /**\n   * Get all keyframes under the screen rectangle.\n   * @param screenRect screen coordinates to get keyframes.\n   */\n  _getKeyframesByRectangle = (screenRect: DOMRect): TimelineKeyframe[] => {\n    const keyframesModels: Array<TimelineKeyframe> = [];\n    this._forEachKeyframe((keyframeViewModel) => {\n      const intersects =\n        keyframeViewModel.shape === TimelineKeyframeShape.Rect\n          ? TimelineUtils.isRectIntersects(keyframeViewModel.size, screenRect)\n          : TimelineUtils.isOverlap(keyframeViewModel.size.x, keyframeViewModel.size.y, screenRect);\n\n      if (intersects) {\n        keyframesModels.push(keyframeViewModel.model);\n      }\n    });\n    return keyframesModels;\n  };\n\n  /**\n   * Private.\n   * Perform timeline click.\n   */\n  _performClick = (pos: TimelineMouseData, drag: TimelineDraggableData | null): boolean => {\n    let isChanged = false;\n    if (drag && drag.type === TimelineElementType.Keyframe) {\n      let mode = TimelineSelectionMode.Normal;\n      if (this._startedDragWithCtrl && this._controlKeyPressed(pos.args)) {\n        if (this._controlKeyPressed(pos.args)) {\n          mode = TimelineSelectionMode.Revert;\n        }\n      } else if (this._startedDragWithShiftKey && pos.args.shiftKey) {\n        mode = TimelineSelectionMode.Append;\n      }\n      // Reverse selected keyframe selection by a click:\n      isChanged = this._selectInternal(drag?.target?.keyframe || null, mode).selectionChanged || isChanged;\n\n      if (pos.args.shiftKey && this._options?.timelineDraggable !== false) {\n        // Set current timeline position if it's not a drag or selection rect small or fast click.\n        isChanged = this._setTimeInternal(pos.val, TimelineEventSource.User) || isChanged;\n      }\n    } else {\n      // deselect keyframes if any:\n      isChanged = this._selectInternal(null).selectionChanged || isChanged;\n\n      if (this._options?.timelineDraggable !== false) {\n        // change timeline pos:\n        // Set current timeline position if it's not a drag or selection rect small or fast click.\n        isChanged = this._setTimeInternal(pos.val, TimelineEventSource.User) || isChanged;\n      }\n    }\n\n    return isChanged;\n  };\n  /**\n   * Set keyframe value.\n   * @param keyframe\n   * @param value\n   * @return set value.\n   */\n  _setKeyframePos = (element: TimelineElementDragState, value: number, source: TimelineEventSource = TimelineEventSource.Programmatically): number => {\n    if (!element || !element.keyframe) {\n      return value;\n    }\n    value = Math.floor(value);\n    if (element.keyframe && element.keyframe.val != value) {\n      element.prevVal = element.val;\n      element.val = value;\n      element.keyframe.val = value;\n      const event = this._emitKeyframeChanged(element, source);\n      if (event.isPrevented()) {\n        element.val = event.prevVal;\n        element.keyframe.val = event.prevVal;\n      }\n\n      return value;\n    }\n\n    return value;\n  };\n\n  /**\n   * @param cursor to set.\n   */\n  _setCursor = (cursor: string): void => {\n    if (this._canvas && this._canvas.style.cursor != cursor) {\n      this._canvas.style.cursor = cursor;\n    }\n  };\n\n  /**\n   * Set component interaction mode.\n   */\n  public setInteractionMode = (mode: TimelineInteractionMode): void => {\n    if (this._interactionMode != mode) {\n      this._interactionMode = mode;\n      // Avoid any conflicts with other modes, clean current state.\n      this._cleanUpSelection(true);\n      this.redraw();\n    }\n  };\n  /**\n   * Get current interaction mode.\n   */\n  public getInteractionMode = (): TimelineInteractionMode => {\n    return this._interactionMode;\n  };\n  /**\n   * Private.\n   * Helper method. Convert model element  to timeline element.\n   */\n  _convertToTimelineElement = (rowModel: TimelineRow | null, keyframe: TimelineKeyframe): TimelineElement => {\n    const data = {\n      type: TimelineElementType.Keyframe,\n      val: keyframe.val,\n      keyframe: keyframe,\n      row: rowModel,\n    } as TimelineElement;\n    return data;\n  };\n\n  public getSelectedKeyframes = (): TimelineKeyframe[] => {\n    const selected = this.getSelectedElements();\n    return selected.map((p) => p.keyframe) as TimelineKeyframe[];\n  };\n\n  /**\n   * Get selected timeline elements.\n   */\n  public getSelectedElements = (): TimelineElement[] => {\n    const selected: TimelineElement[] = [];\n    this._forEachKeyframe((keyframe): void => {\n      if (keyframe && keyframe.model.selected) {\n        selected.push(this._convertToTimelineElement(keyframe.rowViewModel.model, keyframe.model));\n      }\n      return;\n    });\n\n    return selected;\n  };\n  /**\n   * Get all keyframe models available in the model.\n   */\n  public getAllKeyframes = (): TimelineKeyframe[] => {\n    const keyframes: TimelineKeyframe[] = [];\n    this._forEachKeyframe((keyframe): void => {\n      keyframes.push(keyframe.model);\n    });\n\n    return keyframes;\n  };\n\n  public selectAllKeyframes = (): TimelineSelectionResults => {\n    return this.select(this.getAllKeyframes(), TimelineSelectionMode.Normal);\n  };\n  public deselectAll = (): TimelineSelectionResults => {\n    return this.select(null);\n  };\n\n  private _changeNodeState = (state: TimelineSelectionResults, node: TimelineKeyframe, value: boolean): boolean => {\n    if (node.selected !== value) {\n      const selectable = typeof node.selectable === 'boolean' ? node.selectable : true;\n      if (!value || (value && selectable)) {\n        node.selected = value;\n        state.changed.push(node);\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  public select = (nodes: TimelineKeyframe[] | TimelineKeyframe | null, mode = TimelineSelectionMode.Normal): TimelineSelectionResults => {\n    const results = this._selectInternal(nodes, mode);\n    if (results.selectionChanged) {\n      this.redraw();\n    }\n    return results;\n  };\n\n  /**\n   * Select keyframes\n   * @param nodes keyframe or list of the keyframes to be selected.\n   * @param mode selection mode.\n   */\n  public _selectInternal = (nodes: TimelineKeyframe[] | TimelineKeyframe | null, mode = TimelineSelectionMode.Normal): TimelineSelectionResults => {\n    if (!nodes) {\n      nodes = [];\n    }\n    if (!Array.isArray(nodes)) {\n      nodes = [nodes];\n    }\n\n    const state = {\n      selectionChanged: false,\n      selected: this.getSelectedKeyframes(),\n      changed: [] as Array<any>,\n    } as TimelineSelectionResults;\n    const nodesArray = nodes as TimelineKeyframe[];\n    //const state = this.selectedSubject.getValue();\n    if (nodesArray && mode === TimelineSelectionMode.Append) {\n      nodes.forEach((node) => {\n        const changed = this._changeNodeState(state, node, true);\n        if (changed && node.selected) {\n          state.selected.push(node);\n        }\n      });\n    } else if (nodesArray && mode === TimelineSelectionMode.Revert) {\n      nodes.forEach((node) => {\n        if (state.selected.indexOf(node) >= 0) {\n          this._changeNodeState(state, node, false);\n          TimelineUtils.deleteElement<TimelineKeyframe>(state.selected, node);\n        } else {\n          this._changeNodeState(state, node, true);\n          if (node.selected) {\n            state.selected.push(node);\n          }\n        }\n      });\n    } else if (mode === TimelineSelectionMode.Normal) {\n      const selectedItems: Array<TimelineKeyframe> = [];\n      if (nodes) {\n        nodes.forEach((node) => {\n          this._changeNodeState(state, node, true);\n          if (node.selected) {\n            selectedItems.push(node);\n          }\n        });\n      }\n\n      state.selected.forEach((node) => {\n        const exists = nodesArray.indexOf(node) >= 0;\n        // Deselect\n        if (!exists) {\n          this._changeNodeState(state, node, false);\n        }\n      });\n\n      if (state.changed.length > 0) {\n        if (selectedItems) {\n          state.selected = selectedItems;\n        } else {\n          state.selected.length = 0;\n        }\n      }\n    }\n\n    if (state.changed.length > 0) {\n      state.selectionChanged = true;\n      this._emitKeyframesSelected(state);\n    }\n\n    return state;\n  };\n\n  /**\n   * foreach visible keyframe.\n   */\n  _forEachKeyframe(callback: (keyframe: TimelineKeyframeViewModel, index?: number, newRow?: boolean) => void): void {\n    if (!callback) {\n      return;\n    }\n    if (!this._model) {\n      return;\n    }\n\n    const calculatedModel = this._generateViewModel();\n    if (!calculatedModel) {\n      return;\n    }\n\n    calculatedModel?.rowsViewModels?.forEach((rowViewModel) => {\n      if (!rowViewModel) {\n        return;\n      }\n\n      let nextRow = true;\n      rowViewModel.keyframesViewModels.forEach((keyframeViewModel, keyframeIndex) => {\n        if (keyframeViewModel) {\n          callback(keyframeViewModel, keyframeIndex, nextRow);\n        }\n\n        nextRow = false;\n      });\n    });\n  }\n\n  /**\n   * Private.\n   * Create extended mouse position and calculate size of the selection rectangle.\n   */\n  _trackMousePos(canvas: HTMLCanvasElement, mouseArgs: MouseEvent | TouchEvent): TimelineMouseData {\n    const clickArgs = this._getMousePos(canvas, mouseArgs);\n    const pos = clickArgs.pos;\n    clickArgs.originalVal = this._mousePosToVal(pos.x, false);\n    clickArgs.snapVal = this._mousePosToVal(pos.x, true);\n    clickArgs.val = clickArgs.originalVal;\n    if (this._options && this._options.snapEnabled) {\n      clickArgs.val = clickArgs.snapVal;\n    }\n\n    if (this._startPosMouseArgs) {\n      if (!this._selectionRect) {\n        this._selectionRect = {} as DOMRect;\n      }\n      const startPos = this._startPosMouseArgs.pos;\n      // get the pos with the virtualization:\n      const x = Math.floor(startPos.x + ((this._scrollStartPos?.x || 0) - this.scrollLeft));\n      const y = Math.floor(startPos.y + ((this._scrollStartPos?.y || 0) - this.scrollTop));\n      this._selectionRect.x = Math.min(x, pos.x);\n      this._selectionRect.y = Math.min(y, pos.y);\n      this._selectionRect.width = Math.max(x, pos.x) - this._selectionRect.x;\n      this._selectionRect.height = Math.max(y, pos.y) - this._selectionRect.y;\n      // Once mouse was moved outside of the bounds it's not a click anymore\n      if (this._clickAllowed) {\n        this._clickAllowed = this._selectionRect.height <= this._consts.clickThreshold && this._selectionRect.width <= this._consts.clickThreshold;\n      }\n    }\n\n    return clickArgs;\n  }\n\n  /**\n   * Get scroll container client width.\n   */\n  getClientWidth(): number {\n    return this._scrollContainer?.clientWidth || 0;\n  }\n  /**\n   * Get scroll container client height.\n   */\n  getClientHeight(): number {\n    return this._scrollContainer?.clientHeight || 0;\n  }\n  _cleanUpSelection(forcePrevent = false): void {\n    if (this._drag) {\n      this._emitDragFinishedEvent(this._drag, forcePrevent);\n    }\n    this._startPosMouseArgs = null;\n    this._drag = null;\n    this._scrollAreaClickOrDragStarted = false;\n    this._startedDragWithCtrl = false;\n    this._startedDragWithShiftKey = false;\n    this._selectionRect = null;\n    this._clickTimeout = null;\n    this._scrollStartPos = null;\n    this._isPanStarted = false;\n    this._clickAllowed = false;\n    this._stopAutoPan();\n  }\n\n  /**\n   * Check whether click timeout is over.\n   */\n  _clickTimeoutIsOver(): boolean {\n    // Duration before the selection can be tracked.\n    if (this._clickTimeout && Date.now() - this._clickTimeout > this._consts.clickDetectionMs) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Automatically pan. Scroll canvas when selection is made and mouse outside of the bounds.\n   */\n  _startAutoPan = (): void => {\n    if (this._consts.autoPanSpeed) {\n      if (!this._intervalRef) {\n        // Repeat move calls to\n        this._intervalRef = window.setInterval(() => {\n          this._handleMouseMoveEvent(null);\n        }, this._consts.autoPanSpeed);\n      }\n    }\n  };\n\n  /**\n   * Stop current running auto pan\n   */\n  _stopAutoPan = (): void => {\n    if (this._intervalRef) {\n      clearInterval(this._intervalRef);\n      this._intervalRef = null;\n    }\n\n    this._autoPanLastActionDate = 0;\n  };\n\n  /**\n   * Check whether auto pan should be slowed down a bit.\n   */\n  _checkUpdateSpeedTooFast(): boolean {\n    // Slow down updated a bit.\n    if (this._autoPanLastActionDate && Date.now() - this._autoPanLastActionDate <= this._consts.autoPanSpeedLimit) {\n      return true;\n    }\n\n    this._autoPanLastActionDate = Date.now();\n    return false;\n  }\n\n  /**\n   * Scroll virtual canvas when pan mode is enabled.\n   */\n  _scrollByPan(start: DOMPoint, pos: DOMPoint, scrollStartPos: DOMPoint | null): void {\n    if (!start || !pos || !this._scrollContainer) {\n      return;\n    }\n    let x = 0;\n    let y = 0;\n    if (scrollStartPos) {\n      x = scrollStartPos.x;\n      y = scrollStartPos.y;\n    }\n    const offsetX = Math.round(start.x - pos.x);\n    const newLeft = x + offsetX;\n\n    if (offsetX > 0) {\n      this._rescaleInternal(newLeft + this._canvasClientWidth());\n    }\n\n    if (offsetX > 0 && newLeft + this._canvasClientWidth() >= this._scrollContainer.scrollWidth - 5) {\n      this.scrollLeft = this._scrollContainer.scrollWidth;\n    } else {\n      this.scrollLeft = newLeft;\n    }\n    this.scrollTop = Math.round(y + start.y - pos.y);\n  }\n\n  _scrollBySelectionOutOfBounds(pos: DOMPoint): boolean {\n    if (!this._scrollContainer) {\n      return false;\n    }\n    const x = pos.x;\n    const y = pos.y;\n    let isChanged = false;\n    let speedX = 0;\n    let speedY = 0;\n    // Small offset to start auto pan earlier.\n    const bounds = this._consts.autoPanByScrollPadding;\n    const isLeft = x <= bounds;\n    const isRight = x >= this._canvasClientWidth() - bounds;\n    const isTop = y <= bounds;\n    const isBottom = y >= this._canvasClientHeight() - bounds;\n    let newWidth = null;\n    let newHeight = null;\n    if (isLeft || isRight || isTop || isBottom) {\n      // Auto move init\n      this._startAutoPan();\n\n      if (this._checkUpdateSpeedTooFast()) {\n        return false;\n      }\n\n      const scrollSpeedMultiplier = isNaN(this._consts.scrollByDragSpeed) ? 1 : this._consts.scrollByDragSpeed;\n      if (isLeft) {\n        // Get normalized speed.\n        speedX = -TimelineUtils.getDistance(x, bounds) * scrollSpeedMultiplier;\n      } else if (isRight) {\n        // Get normalized speed:\n        speedX = TimelineUtils.getDistance(x, this._canvasClientWidth() - bounds) * scrollSpeedMultiplier;\n        newWidth = this.scrollLeft + this._canvasClientWidth() + speedX;\n      }\n\n      if (isTop) {\n        // Get normalized speed.\n        speedY = (-TimelineUtils.getDistance(x, bounds) * scrollSpeedMultiplier) / 4;\n      } else if (isBottom) {\n        // Get normalized speed:\n        speedY = (TimelineUtils.getDistance(x, this._canvasClientHeight() - bounds) * scrollSpeedMultiplier) / 4;\n        newHeight = this._scrollContainer.scrollTop + this._canvasClientHeight();\n      }\n    } else {\n      this._stopAutoPan();\n    }\n\n    if (newWidth || newHeight) {\n      this._rescaleInternal(newWidth, newHeight, TimelineScrollSource.ScrollBySelection);\n    }\n\n    if (Math.abs(speedX) > 0) {\n      this.scrollLeft = this._scrollContainer.scrollLeft + speedX;\n      isChanged = true;\n    }\n\n    if (Math.abs(speedY) > 0) {\n      this.scrollTop = this._scrollContainer.scrollTop + speedY;\n      isChanged = true;\n    }\n\n    return isChanged;\n  }\n\n  /**\n   * Convert screen pixel to value.\n   */\n  public pxToVal(px: number): number {\n    if (!this._options) {\n      return px;\n    }\n    let min = this._options.min || 0;\n    if (!TimelineUtils.isNumber(min)) {\n      min = 0;\n    }\n    const stepPx = this._options.stepPx || 0;\n    if (stepPx === 0) {\n      return px;\n    }\n    min *= this._currentZoom || 1;\n    const steps = (this._options.stepVal || 0) * this._currentZoom || 1;\n    const val = min + (px / stepPx) * steps;\n    return val;\n  }\n\n  /**\n   * Convert value to local screen component coordinates.\n   */\n  _toScreenPx = (val: number): number => {\n    return this.valToPx(val) - this.scrollLeft + this._leftMargin();\n  };\n  /**\n   * Convert screen local coordinates to a global value info.\n   */\n  _fromScreen = (px: number): number => {\n    return this.pxToVal(this.scrollLeft + px - this._leftMargin());\n  };\n  /**\n   * Convert area value to global screen pixel coordinates.\n   */\n  public valToPx = (val: number): number => {\n    if (!this._options || !this._options.stepPx) {\n      return val;\n    }\n    let min = this._options.min || 0;\n    if (!TimelineUtils.isNumber(min)) {\n      min = 0;\n    }\n    min *= this._currentZoom || 1;\n    const steps = (this._options.stepVal || 0) * this._currentZoom || 1;\n    return (-min + val) * (this._options.stepPx / steps);\n  };\n\n  /**\n   * Snap a value to a nearest grid point.\n   */\n  public snapVal(val: number): number {\n    // Snap a value if configured.\n    if (this._options && this._options.snapEnabled && this._options.snapStep) {\n      const stops = this._options.snapStep;\n      const step = val / stops;\n      const stepsFit = Math.round(step);\n      const minSteps = Math.abs(this._options.min || 0) / this._options.snapStep;\n      const minOffset = TimelineUtils.sign(this._options.min || 1) * (minSteps - Math.floor(minSteps)) * this._options.snapStep;\n      val = Math.round(minOffset) + Math.round(stepsFit * stops);\n    }\n\n    val = TimelineUtils.keepInBounds(val, this._options.min, this._options.max);\n    return val;\n  }\n\n  /**\n   * Convert mouse position to the timeline units considering all the scrolling and offsets.\n   */\n  _mousePosToVal = (x: number, snapEnabled = false): number => {\n    const mousePos = Math.min(x, this._canvasClientWidth());\n    let convertedVal = this._fromScreen(mousePos);\n    convertedVal = Math.round(convertedVal);\n    if (snapEnabled) {\n      convertedVal = this.snapVal(convertedVal);\n    }\n\n    return convertedVal;\n  };\n\n  /**\n   * Format line gauge text.\n   * Default formatting is HMS\n   * @param ms milliseconds to convert.\n   * @param isSeconds whether seconds are passed.\n   */\n  _formatUnitsText = (ms: number, isSeconds = false): string => {\n    const sign = TimelineUtils.sign(ms) < 0 ? '-' : '';\n    ms = Math.abs(ms);\n    // 1- Convert to seconds:\n    let seconds = ms / 1000;\n    if (isSeconds) {\n      seconds = ms;\n    }\n\n    const year = Math.floor(seconds / (365 * 86400));\n    seconds = seconds % (365 * 86400);\n\n    const days = Math.floor(seconds / 86400);\n    seconds = seconds % 86400;\n\n    // 2- Extract hours:\n    const hours = Math.floor(seconds / 3600); // 3,600 seconds in 1 hour\n    seconds = seconds % 3600; // seconds remaining after extracting hours\n    // 3- Extract minutes:\n    const minutes = Math.floor(seconds / 60); // 60 seconds in 1 minute\n    // 4- Keep only seconds not extracted to minutes:\n    seconds = seconds % 60;\n    let str = '';\n    if (year) {\n      str += year + ':';\n    }\n\n    if (days) {\n      str += days + ':';\n    }\n\n    if (hours) {\n      str += hours + ':';\n    }\n\n    if (minutes) {\n      str += hours ? TimelineUtils.timePadZero(minutes) : minutes + ':';\n    }\n\n    if (!isNaN(seconds)) {\n      str += minutes ? TimelineUtils.timePadZero(seconds) : seconds;\n    }\n\n    return sign + str;\n  };\n  /**\n   * Left padding of the timeline.\n   */\n  _leftMargin = (): number => {\n    return this._options?.leftMargin || 0;\n  };\n  /**\n   * Private.\n   * Render line gauge ticks.\n   */\n  _renderTicks = (): void => {\n    if (!this._ctx || !this._ctx.canvas || this._ctx.canvas.clientWidth <= 0 || this._ctx.canvas.clientHeight <= 0 || !this._options || !this._options.stepPx) {\n      return;\n    }\n    const screenWidth = this._canvasClientWidth() - this._leftMargin();\n    let from = this.pxToVal(this.scrollLeft);\n    let to = this.pxToVal(this.scrollLeft + screenWidth);\n    if (isNaN(from) || isNaN(to) || from === to) {\n      return;\n    }\n\n    if (to < from) {\n      const wasToVal = to;\n      to = from;\n      from = wasToVal;\n    }\n\n    const valDistance = TimelineUtils.getDistance(from, to);\n    if (valDistance <= 0) {\n      return;\n    }\n\n    // Find the nearest 'beautiful' step for a gauge.\n    // 'beautiful' step should be dividable by 1/2/5/10!\n    const step = TimelineUtils.findGoodStep(valDistance / (screenWidth / this._options.stepPx));\n\n    // Find beautiful start point:\n    const fromVal = Math.floor(from / step) * step;\n\n    // Find a beautiful end point:\n    const toVal = Math.ceil(to / step) * step + step;\n\n    if (!TimelineUtils.isNumber(step) || step <= 0 || Math.abs(toVal - fromVal) === 0) {\n      return;\n    }\n    let smallStep = 0;\n    if (this._options.stepSmallPx) {\n      smallStep = TimelineUtils.findGoodStep(valDistance / (screenWidth / this._options.stepSmallPx));\n    }\n\n    let lastTextStart = 0;\n    this._ctx.save();\n    const headerHeight = TimelineStyleUtils.headerHeight(this._options);\n    const tickHeight = headerHeight / 2;\n    const smallTickHeight = headerHeight / 1.3;\n    for (let i = fromVal; i <= toVal; i += step) {\n      // local\n      const sharpPos = this._getSharp(this._toScreenPx(i));\n      this._ctx.save();\n      this._ctx.beginPath();\n      this._ctx.setLineDash([4]);\n      this._ctx.lineWidth = 1;\n      if (this._options.tickColor) {\n        this._ctx.strokeStyle = this._options.tickColor;\n      }\n      TimelineUtils.drawLine(this._ctx, sharpPos, tickHeight, sharpPos, headerHeight);\n      this._ctx.stroke();\n      if (this._options.labelsColor) {\n        this._ctx.fillStyle = this._options.labelsColor;\n      }\n      if (this._options.font) {\n        this._ctx.font = this._options.font;\n      }\n\n      const text = this._formatUnitsText(i);\n      const textSize = this._ctx.measureText(text);\n\n      const textX = sharpPos - textSize.width / 2;\n      // skip text render if there is no space for it.\n      if (isNaN(lastTextStart) || lastTextStart <= textX) {\n        lastTextStart = textX + textSize.width;\n        this._ctx.fillText(text, textX, 10);\n      }\n\n      this._ctx.restore();\n      if (!TimelineUtils.isNumber(smallStep) || smallStep <= 0) {\n        continue;\n      }\n      // Draw small steps\n      for (let x = i + smallStep; x < i + step; x += smallStep) {\n        // local\n        const nextSharpPos = this._getSharp(this._toScreenPx(x));\n        this._ctx.beginPath();\n        this._ctx.lineWidth = this._pixelRatio;\n        if (this._options.tickColor) {\n          this._ctx.strokeStyle = this._options.tickColor;\n        }\n        TimelineUtils.drawLine(this._ctx, nextSharpPos, smallTickHeight, nextSharpPos, headerHeight);\n        this._ctx.stroke();\n      }\n    }\n\n    this._ctx.restore();\n  };\n\n  /**\n   * Private.\n   * Calculate virtual view model.\n   * Determine screen positions for the model elements given.\n   */\n  _generateViewModel = (): TimelineViewModel => {\n    const toReturn = {\n      size: {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n      } as DOMRect,\n      min: null,\n      max: null,\n      rowsViewModels: [],\n      keyframesViewModels: [],\n    } as TimelineViewModel;\n\n    if (!this._model) {\n      return toReturn;\n    }\n    const rows = this._model.rows;\n    if (!rows || !Array.isArray(rows) || rows.length <= 0) {\n      return toReturn;\n    }\n    let rowAbsoluteHeight = TimelineStyleUtils.headerHeight(this._options);\n    rows.forEach((row, index) => {\n      if (!row || row.hidden) {\n        return;\n      }\n\n      // draw with scroll virtualization:\n      const rowHeight = TimelineStyleUtils.getRowHeight(row.style || null, this._options);\n      const marginBottom = TimelineStyleUtils.getRowMarginBottom(row.style || null, this._options);\n      const currentRowY = rowAbsoluteHeight - (this._scrollContainer ? this._scrollContainer.scrollTop : 0);\n      rowAbsoluteHeight += rowHeight + marginBottom;\n      if (index == 0) {\n        toReturn.size.y = currentRowY;\n      }\n\n      toReturn.size.height = Math.max(rowAbsoluteHeight + rowHeight, toReturn.size.height);\n      const rowSize = { x: 0, y: currentRowY, width: this._canvasClientWidth(), height: rowHeight } as DOMRect;\n      const rowViewModel = {\n        size: rowSize,\n        marginBottom: marginBottom,\n        model: row,\n        index: index,\n        min: null,\n        max: null,\n        groupsViewModels: [],\n        keyframesViewModels: [],\n      } as TimelineRowViewModel;\n      toReturn.rowsViewModels.push(rowViewModel);\n      if (!row.keyframes || !row.keyframes.forEach || row.keyframes.length <= 0) {\n        return;\n      }\n\n      // Get min and max ms to draw keyframe rows:\n      if (row && row.keyframes) {\n        row.keyframes.forEach((keyframe) => {\n          if (!keyframe || !TimelineUtils.isNumber(keyframe.val)) {\n            console.log('Unexpected null keyframe or having invalid value');\n            return;\n          }\n          if (keyframe.hidden) {\n            return;\n          }\n          let groupViewModel: TimelineGroupViewModel | null = rowViewModel.groupsViewModels?.find((p) => keyframe.group === p.groupModel) || null;\n          if (!groupViewModel) {\n            groupViewModel = {\n              min: keyframe.val,\n              max: keyframe.val,\n              size: null,\n              groupModel: keyframe.group,\n              keyframesViewModels: [],\n            } as TimelineGroupViewModel;\n            // TimelineStyleUtils.groupFillColor(rowViewModel.model.style || null, this._options);\n            rowViewModel.groupsViewModels.push(groupViewModel);\n          }\n          const keyframeShape = TimelineStyleUtils.keyframeShape(keyframe, keyframe.group, row.style || null, this._options);\n          const keyframeSize = this._getKeyframePosition(keyframe, groupViewModel, rowViewModel, keyframeShape);\n          const keyframeViewModel = {\n            model: keyframe,\n            rowViewModel: rowViewModel,\n            groupViewModel: groupViewModel,\n            size: keyframeSize,\n            shape: keyframeShape,\n          } as TimelineKeyframeViewModel;\n\n          const min = groupViewModel.min === null ? keyframe.val : Math.min(keyframe.val, groupViewModel.min);\n          const max = groupViewModel.max === null ? keyframe.val : Math.max(keyframe.val, groupViewModel.max);\n          if (TimelineUtils.isNumber(min)) {\n            groupViewModel.min = min;\n          }\n          if (TimelineUtils.isNumber(max)) {\n            groupViewModel.max = max;\n          }\n          // All keyframes in the row\n          rowViewModel.keyframesViewModels.push(keyframeViewModel);\n          // All keyframes in the group\n          groupViewModel.keyframesViewModels.push(keyframeViewModel);\n          // All keyframes in the component\n          toReturn.keyframesViewModels.push(keyframeViewModel);\n        });\n      }\n\n      rowViewModel.groupsViewModels.forEach((groupViewModel) => {\n        // Extend row min max bounds by a group bounds. It's used to notify needed visible bounds for the row.\n        TimelineUtils.setMinMax(rowViewModel, groupViewModel, true);\n        // get group screen coords\n        const groupRect = this._getKeyframesGroupSize(groupViewModel, rowViewModel);\n        groupViewModel.size = groupRect;\n      });\n\n      // Extend screen bounds by a current calculation:\n      TimelineUtils.setMinMax(toReturn, rowViewModel, true);\n    });\n    if (TimelineUtils.isNumber(toReturn.max) && (toReturn.max || toReturn.max === 0)) {\n      toReturn.size.width = this.valToPx(toReturn.max);\n    }\n    return toReturn;\n  };\n\n  /**\n   * Render timeline rows.\n   */\n  _renderRows = (): void => {\n    if (!this._ctx) {\n      return;\n    }\n    const viewModel = this._generateViewModel();\n    if (!viewModel?.rowsViewModels) {\n      return;\n    }\n    try {\n      this._ctx.save();\n\n      viewModel.rowsViewModels.forEach((rowViewModel) => {\n        if (!rowViewModel || !this._ctx) {\n          return;\n        }\n\n        this._ctx.fillStyle = TimelineStyleUtils.getRowFillColor(rowViewModel.model.style || null, this._options);\n        //this._ctx.fillRect(data.areaRect.x, data.areaRect.y, data.areaRect.w, data.areaRect.h);\n        // Note: bounds used instead of the clip while clip is slow!\n        const bounds = this._cutBounds(rowViewModel.size);\n        if (bounds?.rect) {\n          const rect = bounds?.rect;\n          this._ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n        }\n\n        this._renderGroupBounds(rowViewModel);\n      });\n    } finally {\n      this._ctx.restore();\n    }\n  };\n  /**\n   * Render group for the row.\n   */\n  _renderGroupBounds = (rowViewModel: TimelineRowViewModel): void => {\n    if (!rowViewModel || !this._ctx) {\n      return;\n    }\n\n    rowViewModel?.groupsViewModels?.forEach((groupsViewModels) => {\n      if (!this._ctx) {\n        return;\n      }\n      const keyframeLaneColor = TimelineStyleUtils.groupFillColor(this._options, groupsViewModels.groupModel, rowViewModel?.model?.style);\n      if (!keyframeLaneColor) {\n        return;\n      }\n      if (!groupsViewModels.size) {\n        console.log('Size of the group cannot be calculated');\n        return;\n      }\n\n      // get the bounds on a canvas\n      const rectBounds = this._cutBounds(groupsViewModels.size);\n      if (rectBounds?.rect) {\n        this._ctx.fillStyle = keyframeLaneColor;\n        const rect = rectBounds.rect;\n        this._ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n      }\n    });\n  };\n  /**\n   * Method is used for the canvas drawing optimization.\n   * Bounds are cut to draw only visible parts for the active canvas.\n   */\n  _cutBounds = (rect: DOMRect): TimelineCutBoundsRectResults | null => {\n    if (!rect) {\n      return null;\n    }\n    // default bounds: minX, maxX, minY, maxY\n    const testOffset = 0;\n    const minX = 0 + testOffset;\n    const maxX = this._canvasClientWidth() - testOffset;\n    const minY = TimelineStyleUtils.headerHeight(this._options) + testOffset;\n    const maxY = this._canvasClientHeight() - testOffset;\n\n    return this._cutBoundsWhenOverlap(rect, minX, maxX, minY, maxY);\n  };\n  _cutBoundsWhenOverlap = (rect: DOMRect, minX: number, maxX: number, minY: number, maxY: number): TimelineCutBoundsRectResults | null => {\n    if (!rect) {\n      return null;\n    }\n\n    if (\n      // At the moment it's a check of top and left intersection.\n      TimelineUtils.isRectIntersects(rect, {\n        x: minX,\n        y: minY,\n        width: TimelineUtils.getDistance(minX, maxX),\n        height: TimelineUtils.getDistance(minY, maxY),\n      } as DOMRect)\n    ) {\n      const y = Math.max(rect.y, minY);\n      const x = Math.max(rect.x, minX);\n      const offsetW = rect.x - x;\n      const offsetH = rect.y - y;\n\n      return {\n        rect: { height: rect.height + offsetH, width: rect.width + offsetW, x: x, y: y },\n        overlapY: Math.abs(offsetH) > 0,\n        overlapX: Math.abs(offsetW) > 0,\n      } as TimelineCutBoundsRectResults;\n    }\n    return null;\n  };\n  /**\n   * Calculate keyframe group screen rect size that is used during the rendering.\n   * @param row\n   * @param rowY row screen coords y position\n   */\n  _getKeyframesGroupSize = (groupViewModel: TimelineGroupViewModel, rowViewModel: TimelineRowViewModel): DOMRect => {\n    const rowY = rowViewModel.size.y;\n    const rowHeight = rowViewModel.size.height;\n    const groupModel = groupViewModel.groupModel || null;\n    let groupHeight = TimelineStyleUtils.groupHeight(this._options, groupModel, rowViewModel?.model?.style);\n\n    let marginTop = TimelineStyleUtils.groupMarginTop(this._options, groupModel, rowViewModel?.model?.style);\n    const isAutoHeight = groupHeight === 'auto';\n    if (!groupHeight || isAutoHeight) {\n      groupHeight = Math.floor(rowHeight);\n    }\n    groupHeight = typeof groupHeight === 'string' ? parseInt(groupHeight) : groupHeight;\n    if (groupHeight > rowHeight) {\n      groupHeight = rowHeight;\n    }\n    const isAutoMargin = marginTop === 'auto';\n    if (typeof marginTop === 'string') {\n      if (isAutoMargin) {\n        marginTop = (rowHeight - groupHeight) / 2;\n      } else {\n        marginTop = parseInt(marginTop) || 0;\n      }\n    }\n\n    if (!isAutoMargin) {\n      if (isAutoHeight) {\n        groupHeight -= marginTop * 2;\n      }\n    }\n\n    // draw keyframes rows.\n    const xMin = this._toScreenPx(groupViewModel.min); // local\n    const xMax = this._toScreenPx(groupViewModel.max); // local\n\n    return {\n      x: xMin,\n      y: rowY + marginTop,\n      height: groupHeight,\n      width: TimelineUtils.getDistance(xMin, xMax),\n    } as DOMRect;\n  };\n\n  _getKeyframePosition = (keyframe: TimelineKeyframe, groupViewModel: TimelineGroupViewModel, rowViewModel: TimelineRowViewModel, keyframeShape: TimelineKeyframeShape): DOMRect | null => {\n    if (!keyframe) {\n      console.log('keyframe should be defined.');\n      return null;\n    }\n\n    const val = keyframe.val;\n    if (!TimelineUtils.isNumber(val)) {\n      return null;\n    }\n\n    const rowSize = rowViewModel.size;\n    // get center of the lane:\n    let y = rowSize.y + rowSize.height / 2;\n    const groupModel = groupViewModel?.groupModel || null;\n    let height: number | string = TimelineStyleUtils.keyframeHeight(keyframe, groupModel, rowViewModel?.model?.style, this._options);\n    let width: number | string = TimelineStyleUtils.keyframeWidth(keyframe, groupModel, rowViewModel?.model?.style, this._options);\n\n    if (height === 'auto') {\n      height = rowSize.height / 3;\n    }\n    if (width === 'auto') {\n      width = height;\n    }\n    height = Number(height);\n    if (!Number.isNaN(height) && height && (height as number) > 0) {\n      const x = Math.floor(this._toScreenPx(val));\n      y = Math.floor(y);\n      const rect = {\n        x: x, // local\n        y: y,\n        height: height,\n        width: width,\n      } as DOMRect;\n      // Rect we are drawing in the center\n      if (keyframeShape === TimelineKeyframeShape.Rect) {\n        rect.y = rect.y - rect.height / 2;\n        rect.x = rect.x - rect.width / 2;\n      }\n      return rect;\n    }\n\n    return null;\n  };\n\n  _renderKeyframes = (): void => {\n    this._forEachKeyframe((keyframeViewModel) => {\n      if (!this._ctx) {\n        return;\n      }\n      const row = keyframeViewModel.rowViewModel.model;\n      const size = keyframeViewModel.size;\n      const keyframe = keyframeViewModel.model;\n      if (size) {\n        const x = this._getSharp(size.x);\n        const y = size.y;\n        const bounds = this._cutBounds({\n          x: x - size.width / 2,\n          y: y - size.height / 2,\n          width: size.width,\n          height: size.height,\n        } as DOMRect);\n        if (!bounds) {\n          return;\n        }\n\n        this._ctx.save();\n\n        // Performance FIX: use clip only  when we are in the collision! Clip is slow!\n        // Other keyframes should be hidden by bounds check.\n        if (bounds && bounds.overlapY) {\n          this._ctx.beginPath();\n          this._ctx.rect(0, TimelineStyleUtils.headerHeight(this._options), this._canvasClientWidth(), this._canvasClientWidth());\n          this._ctx.clip();\n        }\n\n        const shape = keyframeViewModel.shape;\n        if (shape === TimelineKeyframeShape.None) {\n          return;\n        }\n        const rowStyle = row.style || null;\n        const groupModel = keyframeViewModel?.groupViewModel?.groupModel || null;\n        const keyframeColor = keyframe.selected\n          ? TimelineStyleUtils.keyframeSelectedFillColor(keyframe, groupModel, rowStyle, this._options)\n          : TimelineStyleUtils.keyframeFillColor(keyframe, groupModel, rowStyle, this._options);\n        const border = TimelineStyleUtils.keyframeStrokeThickness(keyframe, groupModel, rowStyle, this._options);\n        let strokeColor = '';\n        if (border > 0) {\n          if (keyframe.selected) {\n            strokeColor = TimelineStyleUtils.keyframeSelectedStrokeColor(keyframe, groupModel, rowStyle, this._options);\n          } else {\n            strokeColor = TimelineStyleUtils.keyframeStrokeColor(keyframe, groupModel, rowStyle, this._options);\n          }\n        }\n\n        if (shape == TimelineKeyframeShape.Rhomb) {\n          this._ctx.beginPath();\n          this._ctx.translate(x, y);\n          this._ctx.rotate((45 * Math.PI) / 180);\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.rect(-size.width / 2, -size.height / 2, size.width, size.height);\n            this._ctx.fill();\n          }\n\n          this._ctx.fillStyle = keyframeColor;\n          // draw main keyframe data with offset.\n          this._ctx.translate(border, border);\n          this._ctx.rect(-size.width / 2, -size.height / 2, size.width - border * 2, size.height - border * 2);\n          this._ctx.fill();\n        } else if (shape == TimelineKeyframeShape.Circle) {\n          this._ctx.beginPath();\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.arc(x, y, size.height, 0, 2 * Math.PI);\n          }\n          this._ctx.fillStyle = keyframeColor;\n          this._ctx.arc(x, y, size.height - border, 0, 2 * Math.PI);\n          this._ctx.fill();\n        } else if (shape == TimelineKeyframeShape.Rect) {\n          this._ctx.beginPath();\n\n          if (border > 0 && strokeColor) {\n            this._ctx.fillStyle = strokeColor;\n            this._ctx.rect(x, y, size.width, size.height);\n            this._ctx.fill();\n          }\n\n          this._ctx.fillStyle = keyframeColor;\n          this._ctx.rect(x + border, y + border, size.width - border, size.height - border);\n          this._ctx.fill();\n        }\n\n        this._ctx.restore();\n      }\n    });\n  };\n\n  _renderSelectionRect = (): void => {\n    if (this._drag || !this._ctx || !this._canvas) {\n      return;\n    }\n    this._ctx.save();\n    const thickness = 1;\n    if (this._selectionRect && this._selectionRectEnabled) {\n      this._ctx.setLineDash([4]);\n      this._ctx.lineWidth = this._pixelRatio;\n      const selectionColor = this._options.selectionColor;\n      if (selectionColor) {\n        this._ctx.strokeStyle = selectionColor;\n      }\n      this._ctx.strokeRect(\n        this._getSharp(this._selectionRect.x, thickness),\n        this._getSharp(this._selectionRect.y, thickness),\n        Math.floor(this._selectionRect.width),\n        Math.floor(this._selectionRect.height),\n      );\n    }\n    this._ctx.restore();\n  };\n\n  _renderBackground = (): void => {\n    if (!this._ctx || !this._canvas) {\n      return;\n    }\n    if (this._options.fillColor) {\n      this._ctx.save();\n      this._ctx.beginPath();\n      this._ctx.rect(0, 0, this._canvasClientWidth(), this._canvasClientHeight());\n      this._ctx.fillStyle = this._options.fillColor;\n      this._ctx.fill();\n      this._ctx.restore();\n    } else {\n      // Clear if bg not set.\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  };\n\n  _renderTimeline = (): void => {\n    if (!this._ctx || !this._options || !this._options.timelineStyle) {\n      return;\n    }\n    const style = this._options.timelineStyle;\n    this._ctx.save();\n    try {\n      const thickness = style.width || 1;\n      this._ctx.lineWidth = thickness * this._pixelRatio;\n      const timeLinePos = this._getSharp(this._toScreenPx(this._val), thickness);\n      if (style.strokeColor) {\n        this._ctx.strokeStyle = style.strokeColor;\n      }\n      if (style.fillColor) {\n        this._ctx.fillStyle = style.fillColor;\n      }\n      const y = style.marginTop || 0;\n      const yBottom = style.marginBottom || 0;\n      this._ctx.beginPath();\n      const canvasHeight = this._canvasClientHeight() - yBottom;\n      TimelineUtils.drawLine(this._ctx, timeLinePos, y, timeLinePos, canvasHeight);\n      this._ctx.stroke();\n      this._renderTimelineCap(timeLinePos, y);\n    } finally {\n      this._ctx.restore();\n    }\n  };\n  /**\n   * Render timeline cap top.\n   */\n  _renderTimelineCap = (timeLinePos: number, y: number): void => {\n    const capStyle = this._options?.timelineStyle?.capStyle;\n    if (!this._ctx || !capStyle) {\n      return;\n    }\n    if (capStyle.capType === TimelineCapShape.None) {\n      return;\n    }\n    this._ctx.save();\n    try {\n      const capSize = capStyle.width || 0;\n      const capHeight = capStyle.height || 0;\n      if (capSize && capHeight) {\n        this._ctx.strokeStyle = capStyle.strokeColor;\n        this._ctx.fillStyle = capStyle.fillColor;\n        if (capStyle.capType === TimelineCapShape.Triangle) {\n          this._ctx.beginPath();\n          this._ctx.moveTo(timeLinePos - capSize / 2, y);\n          this._ctx.lineTo(timeLinePos + capSize / 2, y);\n          this._ctx.lineTo(timeLinePos, capHeight);\n          this._ctx.closePath();\n          this._ctx.stroke();\n        } else if (capStyle.capType === TimelineCapShape.Rect) {\n          this._ctx.fillRect(timeLinePos - capSize / 2, y, capSize, capHeight);\n          this._ctx.fill();\n        }\n      }\n    } finally {\n      this._ctx.restore();\n    }\n  };\n  _renderHeaderBackground = (): void => {\n    if (!this._ctx || !this._options) {\n      return;\n    }\n    if (TimelineStyleUtils.headerHeight(this._options)) {\n      this._ctx.save();\n      // draw ticks background\n      this._ctx.lineWidth = this._pixelRatio;\n      if (this._options.headerFillColor) {\n        // draw ticks background\n        this._ctx.lineWidth = this._pixelRatio;\n        // draw header background\n        this._ctx.fillStyle = this._options.headerFillColor;\n        this._ctx.fillRect(0, 0, this._canvasClientWidth(), TimelineStyleUtils.headerHeight(this._options));\n      } else {\n        this._ctx.clearRect(0, 0, this._canvasClientWidth(), TimelineStyleUtils.headerHeight(this._options));\n      }\n      this._ctx.restore();\n    }\n  };\n\n  redraw = (): void => {\n    if (window?.requestAnimationFrame) {\n      window.requestAnimationFrame(this._redrawInternal);\n    } else {\n      this._redrawInternal();\n    }\n  };\n\n  /**\n   * perform scroll to max right.\n   */\n  public scrollToRightBounds = (): void => {\n    if (this._scrollContainer && this._scrollContainer.scrollLeft !== this._scrollContainer.scrollWidth) {\n      this.scrollLeft = this._scrollContainer.scrollWidth;\n    }\n  };\n\n  /**\n   * Redraw parts of the component in the specific order.\n   */\n  _redrawInternal = (): void => {\n    if (!this._ctx || !this._scrollContainer) {\n      console.log('Context is not initialized');\n      return;\n    }\n    // Rescale when animation is played out of the bounds.\n    if (this.valToPx(this._val) > this._scrollContainer.scrollWidth) {\n      this.rescale();\n      if (!this._isPanStarted && this._drag && this._drag.type !== TimelineElementType.Timeline) {\n        this.scrollToRightBounds();\n      }\n    }\n\n    this._renderBackground();\n    this._renderRows();\n    // Render after rows\n    this._renderHeaderBackground();\n    this._renderTicks();\n    this._renderKeyframes();\n    this._renderSelectionRect();\n    this._renderTimeline();\n  };\n\n  /**\n   * Find sharp pixel position\n   */\n  _getSharp = (pos: number, thickness = 1): number => {\n    pos = Math.round(pos);\n    if (thickness % 2 == 0) {\n      return pos;\n    }\n\n    return pos + this._pixelRatio / 2;\n  };\n\n  /**\n   * Get current time:\n   */\n  public getTime = (): number => {\n    return this._val;\n  };\n\n  /**\n   * Set current time internal\n   * @param val value.\n   * @param source event source.\n   */\n  _setTimeInternal = (val: number, source: TimelineEventSource = TimelineEventSource.Programmatically): boolean => {\n    if (!this._options) {\n      return false;\n    }\n    val = Math.round(val);\n    val = TimelineUtils.keepInBounds(val, this._options.min);\n    if (this._val != val) {\n      const prevVal = this._val;\n      const timelineEvent = new TimelineTimeChangedEvent();\n      timelineEvent.val = val;\n      timelineEvent.prevVal = prevVal;\n      timelineEvent.source = source;\n      this._val = val;\n      this.emit(TimelineEvents.TimeChanged, timelineEvent);\n      if (timelineEvent.isPrevented()) {\n        this._val = prevVal;\n        return false;\n      }\n      return true;\n    }\n\n    return false;\n  };\n  public setTime = (val: number): boolean => {\n    // don't allow to change time during drag:\n    if (this._drag && this._drag.type === TimelineElementType.Timeline) {\n      return false;\n    }\n\n    const isChanged = this._setTimeInternal(val, TimelineEventSource.SetTimeMethod);\n    if (isChanged) {\n      this.rescale();\n      this.redraw();\n    }\n\n    return isChanged;\n  };\n\n  public getOptions = (): TimelineOptions => {\n    return this._options;\n  };\n\n  /**\n   * Current scroll left position.\n   */\n  public get scrollLeft(): number {\n    return this._scrollContainer?.scrollLeft || 0;\n  }\n  public set scrollLeft(value: number) {\n    if (this._scrollContainer && this._scrollContainer.scrollLeft !== value) {\n      this._scrollProgrammatically = true;\n      this._scrollContainer.scrollLeft = value;\n    }\n  }\n  public get scrollTop(): number {\n    return this._scrollContainer?.scrollTop || 0;\n  }\n\n  public set scrollTop(value: number) {\n    if (this._scrollContainer && this._scrollContainer.scrollTop !== value) {\n      this._scrollProgrammatically = true;\n      this._scrollContainer.scrollTop = value;\n    }\n  }\n\n  /**\n   * Set options and render the component.\n   * Note: Options will be merged\\appended with the defaults and component will be invalidated/rendered again.\n   */\n  public setOptions = (toSet: TimelineOptions): TimelineOptions => {\n    this._options = this._setOptions(toSet);\n    this.rescale();\n    this.redraw();\n    // Merged options:\n    return this._options;\n  };\n\n  /**\n   * Private. Apply html container styles from options if any is set.\n   */\n  _applyContainersStyles = (): void => {\n    if (this._scrollContainer && this._options) {\n      const classList = this._scrollContainer.classList;\n      if (this._options.scrollContainerClass && !classList.contains(this._options.scrollContainerClass)) {\n        classList.add(this._options.scrollContainerClass);\n      }\n      if (this._options.fillColor) {\n        this._scrollContainer.style.background = this._options.fillColor;\n      }\n    }\n  };\n  _setOptions = (toSet: TimelineOptions): TimelineOptions => {\n    if (!toSet) {\n      return this._options || {};\n    }\n    this._options = TimelineUtils.mergeOptions(this._options, toSet);\n    // Normalize and validate spans per value.\n    this._options.snapStep = TimelineUtils.keepInBounds(this._options.snapStep || 0, 0, this._options.stepVal || 0);\n    this._currentZoom = this._setZoom(this._options.zoom || 0, this._options.zoomMin, this._options.zoomMax);\n    this._options.min = TimelineUtils.isNumber(this._options.min) ? this._options.min : 0;\n    this._options.max = TimelineUtils.isNumber(this._options.max) ? this._options.max : Number.MAX_VALUE;\n    this._applyContainersStyles();\n    // Prevent current active dragging of the timeline, while it's set that it's not allowed anymore.\n    if (toSet.timelineDraggable === false) {\n      if (this._drag && this._drag.type === TimelineElementType.Timeline) {\n        this._cleanUpSelection();\n      }\n    }\n    return this._options;\n  };\n\n  /**\n   * Get current model.\n   */\n  public getModel = (): TimelineModel | null => {\n    return this._model;\n  };\n\n  /**\n   * Set model and redraw application.\n   * @param data\n   */\n  public setModel = (data: TimelineModel): void => {\n    this._model = data;\n    this.rescale();\n    this.redraw();\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _getMousePos = (canvas: HTMLCanvasElement, e: TouchEvent | MouseEvent | any): TimelineMouseData => {\n    let radius = 1;\n    let clientX = 0;\n    let clientY = 0;\n    if (e.changedTouches && e.changedTouches.length > 0) {\n      // TODO: implement better touch support\n      const touch = e.changedTouches[0];\n      clientX = touch.clientX;\n      clientY = touch.clientY;\n      radius = Math.max(radius, touch.radiusX, touch.radiusY);\n    } else {\n      clientX = e.clientX;\n      clientY = e.clientY;\n    }\n\n    const rect = canvas.getBoundingClientRect(), // abs. size of element\n      scaleX = canvas.width / this._pixelRatio / rect.width, // relationship bitmap vs. element for X\n      scaleY = canvas.height / this._pixelRatio / rect.height; // relationship bitmap vs. element for Y\n\n    const x = (clientX - rect.left) * scaleX;\n    const y = (clientY - rect.top) * scaleY;\n    // scale mouse coordinates after they have been adjusted to be relative to element\n    return {\n      pos: { x, y } as DOMPoint,\n      radius,\n      args: e,\n    } as TimelineMouseData;\n  };\n\n  /**\n   * Apply container div size to the container on changes detected.\n   */\n  _updateCanvasScale = (): boolean => {\n    if (!this._scrollContainer || !this._container || !this._ctx) {\n      console.log('Component should be initialized first.');\n      return false;\n    }\n    let changed = false;\n    const width = this._scrollContainer.clientWidth * this._pixelRatio;\n    const height = this._scrollContainer.clientHeight * this._pixelRatio;\n    if (Math.floor(width) != Math.floor(this._ctx.canvas.width)) {\n      this._ctx.canvas.width = width;\n      changed = true;\n    }\n\n    if (Math.floor(height) != Math.floor(this._ctx.canvas.height)) {\n      this._ctx.canvas.height = height;\n      changed = true;\n    }\n\n    if (changed) {\n      this._ctx.setTransform(this._pixelRatio, 0, 0, this._pixelRatio, 0, 0);\n    }\n    return changed;\n  };\n\n  /**\n   * Rescale and update size of the container.\n   */\n  public rescale = (): boolean => {\n    return this._rescaleInternal();\n  };\n\n  /**\n   * This method is used to draw additional space when after there are no keyframes.\n   * When scrolled we should allow to indefinitely scroll right, so space should be extended to drag keyframes outside of the current size bounds.\n   */\n  _rescaleInternal = (newWidth: number | null = null, newHeight: number | null = null, scrollMode = TimelineScrollSource.DefaultMode): boolean => {\n    let changed = this._updateCanvasScale();\n    if (!this._scrollContent) {\n      return changed;\n    }\n    const data = this._generateViewModel();\n    if (data && data.size) {\n      const additionalOffset = this._options.stepPx || 0;\n      newWidth = newWidth || 0;\n      // content should be not less than current timeline position + width of the timeline\n      const timelineGlobalPos = this.valToPx(this._val) + this._leftMargin();\n      let timelinePos = 0;\n      const rightPosition = this.scrollLeft + this.getClientWidth();\n\n      if (timelineGlobalPos >= rightPosition) {\n        if (scrollMode == TimelineScrollSource.ScrollBySelection) {\n          // When item (timeline, selection rectangle) is just dragged to the right corner.\n          timelinePos = Math.floor(timelineGlobalPos + this._leftMargin());\n        } else {\n          // When timeline is playing and we need to add next screen (when timeline goes out of the bounds.)\n          timelinePos = Math.floor(timelineGlobalPos + this.getClientWidth() + this._leftMargin());\n        }\n      }\n      const keyframeW = data.size.width + this._leftMargin() + additionalOffset;\n\n      newWidth = Math.max(\n        // New expected component width.\n        newWidth,\n        // keyframes max width\n        keyframeW,\n        // not less than current scroll position\n        rightPosition,\n        timelinePos,\n      );\n\n      const minWidthPx = Math.floor(newWidth) + 'px';\n      if (minWidthPx != this._scrollContent.style.minWidth) {\n        this._scrollContent.style.minWidth = minWidthPx;\n        changed = true;\n      }\n\n      newHeight = Math.max(\n        // active size\n        Math.floor(data.size.height + this._canvasClientHeight() * 0.2),\n        (this._scrollContainer?.scrollTop || 0) + this._canvasClientHeight() - 1,\n        Math.round(newHeight || 0),\n      );\n\n      const h = Math.floor(newHeight) + 'px';\n      if (this._scrollContent.style.minHeight != h) {\n        this._scrollContent.style.minHeight = h;\n        return changed;\n      }\n    }\n    return changed;\n  };\n\n  /**\n   * Filter elements that can be dragged.\n   * Filtration is done based on the timeline styles and options.\n   */\n  _filterDraggableElements = (elements: TimelineElement[]): TimelineElement[] => {\n    // filter and sort: Timeline, individual keyframes, groups (distance).\n    const filteredElements = elements.filter((element) => {\n      if (!element) {\n        return false;\n      }\n      if (element.type === TimelineElementType.Keyframe) {\n        if (!TimelineStyleUtils.keyframeDraggable(element.keyframe || null, element.keyframe?.group || null, element?.row || null, this._options)) {\n          return false;\n        }\n      } else if (element.type === TimelineElementType.Group) {\n        if (!TimelineStyleUtils.groupDraggable(element.group || null, element.row || null, this._options)) {\n          return false;\n        }\n      } else if (element.type === TimelineElementType.Timeline) {\n        if (this._options?.timelineDraggable === false) {\n          return false;\n        }\n      } else if (element.type === TimelineElementType.Row) {\n        return false;\n      }\n      return true;\n    });\n    return filteredElements;\n  };\n  /**\n   * Filter and sort draggable elements by the priority to get first draggable element closest to the passed value.\n   */\n  _findDraggableElement = (elements: TimelineElement[], val: number | null = null): TimelineElement | null => {\n    // filter and sort: Timeline, individual keyframes, groups (distance).\n    const getPriority = (type: TimelineElementType): number => {\n      if (type === TimelineElementType.Timeline) {\n        return 1;\n      } else if (type === TimelineElementType.Keyframe) {\n        return 2;\n      } else if (type === TimelineElementType.Group) {\n        return 3;\n      }\n      return -1;\n    };\n\n    const sortDraggable = (a: TimelineElement, b: TimelineElement): number => {\n      let prioA = getPriority(a.type);\n      let prioB = getPriority(b.type);\n      if (prioA === prioB) {\n        if (val === null) {\n          return 0;\n        }\n\n        // Sort by distance\n        prioA = TimelineUtils.getDistance(a.val, val);\n        prioB = TimelineUtils.getDistance(b.val, val);\n        if (prioA === prioB) {\n          return 0;\n        }\n        return prioA < prioB ? 1 : -1;\n      }\n\n      return prioA < prioB ? 1 : -1;\n    };\n    const sorted = this._filterDraggableElements(elements).sort(sortDraggable);\n    if (sorted.length > 0) {\n      return sorted[sorted.length - 1];\n    }\n\n    return null;\n  };\n  /**\n   * get all clickable elements by the given local screen coordinate.\n   */\n  public elementFromPoint = (pos: DOMPoint, clickRadius: number, onlyTypes?: TimelineElementType[] | null): TimelineElement[] => {\n    clickRadius = Math.max(clickRadius, 1);\n    const toReturn: TimelineElement[] = [];\n\n    if (!pos) {\n      return toReturn;\n    }\n\n    const headerHeight = TimelineStyleUtils.headerHeight(this._options);\n    // Check whether we can drag timeline.\n    const timeLinePos = this._toScreenPx(this._val);\n    let width = 0;\n    const timelineStyle = this._options?.timelineStyle;\n    if (timelineStyle) {\n      width = Math.max((timelineStyle.width || 1) * this._pixelRatio, (timelineStyle?.capStyle?.width || 0) * this._pixelRatio || 1) + clickRadius;\n    }\n    // Allow to select timeline only by half of a header to allow select by a selector top most keyframes row.\n    if (pos.y <= headerHeight * 0.5 || (pos.x >= timeLinePos - width / 2 && pos.x <= timeLinePos + width / 2)) {\n      toReturn.push({\n        val: this._val,\n        type: TimelineElementType.Timeline,\n      } as TimelineElement);\n    }\n    const snap = this._options.snapEnabled;\n    if (pos.y >= headerHeight && this._options.keyframesDraggable) {\n      this._forEachKeyframe((keyframeViewModel, _, isNextRow): void => {\n        const rowViewModel = keyframeViewModel.rowViewModel;\n        // Check keyframes group overlap\n        if (isNextRow) {\n          const rowOverlapped = TimelineUtils.isOverlap(pos.x, pos.y, rowViewModel.size);\n          if (rowOverlapped) {\n            const row = {\n              val: this._mousePosToVal(pos.x, snap),\n              keyframes: rowViewModel.model.keyframes,\n              type: TimelineElementType.Row,\n              row: rowViewModel.model,\n            } as TimelineElement;\n            toReturn.push(row);\n          }\n          if (rowViewModel.groupsViewModels) {\n            rowViewModel.groupsViewModels.forEach((groupViewModel) => {\n              if (!groupViewModel?.size) {\n                return;\n              }\n              const keyframesGroupOverlapped = TimelineUtils.isOverlap(pos.x, pos.y, groupViewModel.size);\n              if (keyframesGroupOverlapped) {\n                const keyframesModels = groupViewModel?.keyframesViewModels.map((p) => p.model) || [];\n                const groupElement = {\n                  // TODO:\n                  val: this._mousePosToVal(pos.x, snap),\n                  type: TimelineElementType.Group,\n                  group: groupViewModel.groupModel,\n                  row: rowViewModel.model,\n                  keyframes: keyframesModels,\n                } as TimelineElement;\n\n                const snapped = this.snapVal(groupViewModel.min);\n                // get snapped mouse pos based on a min value.\n                groupElement.val += groupViewModel.min - snapped;\n                toReturn.push(groupElement);\n              }\n            });\n          }\n        }\n\n        const keyframePosRect = keyframeViewModel.size;\n        if (keyframePosRect) {\n          let isMouseOver = false;\n          if (keyframeViewModel.shape === TimelineKeyframeShape.Rect) {\n            const extendedMouseRect = TimelineUtils.shrinkSelf({ x: pos.x, y: pos.y, height: clickRadius, width: clickRadius } as DOMRect, clickRadius);\n            isMouseOver = TimelineUtils.isRectIntersects(extendedMouseRect, keyframePosRect, true);\n          } else {\n            const dist = TimelineUtils.getDistance(keyframePosRect.x, keyframePosRect.y, pos.x, pos.y);\n            isMouseOver = dist <= keyframePosRect.height + clickRadius;\n          }\n          if (isMouseOver) {\n            toReturn.push({\n              keyframe: keyframeViewModel.model,\n              keyframes: [keyframeViewModel.model],\n              val: keyframeViewModel.model.val,\n              row: keyframeViewModel.rowViewModel.model,\n              type: TimelineElementType.Keyframe,\n            } as TimelineElement);\n          }\n        }\n      });\n    }\n\n    if (!onlyTypes || onlyTypes.length === 0) {\n      return toReturn;\n    } else {\n      return toReturn.filter((p) => onlyTypes && onlyTypes.includes(p.type));\n    }\n  };\n\n  /**\n   * Subscribe user callback on time changed.\n   */\n  public onTimeChanged = (callback: (eventArgs: TimelineTimeChangedEvent) => void): void => {\n    this.on(TimelineEvents.TimeChanged, callback);\n  };\n  /**\n   * Subscribe user callback on drag started event.\n   */\n  public onDragStarted = (callback: (eventArgs: TimelineDragEvent) => void): void => {\n    this.on(TimelineEvents.DragStarted, callback);\n  };\n  /**\n   * Subscribe user callback on drag event.\n   */\n  public onDrag = (callback: (eventArgs: TimelineDragEvent) => void): void => {\n    this.on(TimelineEvents.Drag, callback);\n  };\n  /**\n   * Subscribe user callback on drag finished event.\n   */\n  public onDragFinished = (callback: (eventArgs: TimelineDragEvent) => void): void => {\n    this.on(TimelineEvents.DragFinished, callback);\n  };\n  /**\n   * Subscribe user callback on double click.\n   */\n  public onDoubleClick = (callback: (eventArgs: TimelineClickEvent) => void): void => {\n    this.on(TimelineEvents.DoubleClick, callback);\n  };\n  /**\n   * Subscribe user callback on keyframe changed event.\n   */\n  public onKeyframeChanged = (callback: (eventArgs: TimelineKeyframeChangedEvent) => void): void => {\n    this.on(TimelineEvents.KeyframeChanged, callback);\n  };\n  /**\n   * Subscribe user callback on drag finished event.\n   */\n  public onMouseDown = (callback: (eventArgs: TimelineClickEvent) => void): void => {\n    this.on(TimelineEvents.MouseDown, callback);\n  };\n\n  /**\n   * Subscribe user callback on selected.\n   */\n  public onSelected = (callback: (eventArgs: TimelineSelectedEvent) => void): void => {\n    this.on(TimelineEvents.Selected, callback);\n  };\n  /**\n   * Subscribe user callback on scroll event\n   */\n  public onScroll = (callback: (eventArgs: TimelineScrollEvent) => void): void => {\n    this.on(TimelineEvents.Scroll, callback);\n  };\n  /**\n   * Subscribe on scroll finished event.\n   */\n  public onScrollFinished = (callback: (eventArgs: TimelineScrollEvent) => void): void => {\n    this.on(TimelineEvents.ScrollFinished, callback);\n  };\n  /**\n   * Private.\n   * Emit internally scroll eve\n   */\n  _emitScrollEvent = (args: Event | null, scrollProgrammatically: boolean, eventType = TimelineEvents.Scroll): TimelineScrollEvent => {\n    const scrollEvent = {\n      args: args,\n      scrollProgrammatically: scrollProgrammatically,\n      scrollLeft: this.scrollLeft,\n      scrollTop: this.scrollTop,\n      scrollHeight: this._scrollContainer?.scrollHeight || 0,\n      scrollWidth: this._scrollContainer?.scrollWidth || 0,\n    } as TimelineScrollEvent;\n    super.emit(eventType, scrollEvent);\n    return scrollEvent;\n  };\n  _emitKeyframeChanged = (element: TimelineElementDragState, source: TimelineEventSource = TimelineEventSource.Programmatically): TimelineKeyframeChangedEvent => {\n    const args = new TimelineKeyframeChangedEvent();\n    args.val = element.val;\n    args.prevVal = element.prevVal;\n    args.target = element;\n    args.source = source;\n    this.emit(TimelineEvents.KeyframeChanged, args);\n    return args;\n  };\n  _emitDragStartedEvent = (dragState: TimelineDraggableData): TimelineDragEvent | null => {\n    if (!dragState) {\n      return null;\n    }\n    const args = this._getDragEventArgs(dragState, this._currentPos);\n    this.emit(TimelineEvents.DragStarted, args);\n    if (args.isPrevented()) {\n      this._preventDrag(args, dragState, true);\n    }\n    return args;\n  };\n  /**\n   * Private emit timeline event that dragging element is finished.\n   * @param forcePrevent - needed when during dragging components set to the state when they cannot be dragged anymore. (used only as recovery state).\n   * @returns\n   */\n  _emitDragFinishedEvent = (dragState: TimelineDraggableData, forcePrevent = false): TimelineDragEvent | null => {\n    if (!dragState || !dragState.changed) {\n      return null;\n    }\n    const args = this._getDragEventArgs(dragState, this._currentPos);\n    if (forcePrevent) {\n      args.preventDefault();\n    }\n    this.emit(TimelineEvents.DragFinished, args);\n    if (args.isPrevented()) {\n      this._preventDrag(args, dragState, true);\n    }\n    return args;\n  };\n  _preventDrag = (dragArgs: TimelineDragEvent, data: TimelineDraggableData, toStart = false): void => {\n    if (dragArgs.elements) {\n      dragArgs.elements.forEach((element) => {\n        const toSet = toStart ? element.startedVal : element.prevVal;\n        this._setKeyframePos(element, toSet);\n      });\n    }\n    data.val = data.prevVal;\n    // Set prev active point\n    dragArgs.point = dragArgs.prevPoint;\n  };\n  _emitDragEvent = (dragState: TimelineDraggableData): TimelineDragEvent | null => {\n    if (!dragState) {\n      return null;\n    }\n    const args = this._getDragEventArgs(dragState, this._currentPos);\n    this.emit<TimelineDragEvent>(TimelineEvents.Drag, args);\n    if (args.isPrevented()) {\n      this._preventDrag(args, dragState, false);\n    }\n    return args;\n  };\n  _emitKeyframesSelected = (state: TimelineSelectionResults): TimelineSelectedEvent => {\n    const args = new TimelineSelectedEvent();\n    args.selected = state.selected;\n    args.changed = state.changed;\n    this.emit<TimelineSelectedEvent>(TimelineEvents.Selected, args);\n    return args;\n  };\n  _getDragEventArgs = (dragState: TimelineDraggableData, point: TimelineMouseData | null): TimelineDragEvent => {\n    const draggableArguments = new TimelineDragEvent();\n    draggableArguments.point = point;\n    // Get cloned list\n    draggableArguments.elements = [...(dragState.elements || [])];\n    draggableArguments.target = dragState?.target || null;\n    return draggableArguments;\n  };\n}\n","// bundle entry point\n\nexport * from './timeline';\nexport * from './timelineEventsEmitter';\nexport * from './settings/timelineConsts';\n// @ public timeline models.\nexport * from './models/timelineRanged';\nexport * from './models/timelineModel';\nexport * from './models/timelineRow';\nexport * from './models/timelineKeyframe';\n\n// @public styles\nexport * from './settings/timelineOptions';\nexport * from './settings/styles/timelineKeyframeStyle';\nexport * from './settings/styles/timelineRowStyle';\nexport * from './settings/styles/timelineStyle';\n\nexport * from './utils/timelineStyleUtils';\nexport * from './utils/timelineUtils';\nexport * from './utils/timelineElement';\n\n// @private helper containers.\nexport * from './utils/timelineSelectable';\nexport * from './utils/timelineCutBoundsRectResults';\nexport * from './utils/timelineSelectionResults';\nexport * from './utils/timelinePoint';\nexport * from './utils/timelineMouseData';\nexport * from './utils/timelineElementDragState';\nexport * from './utils/timelineDraggableData';\n\n// @private virtual model\nexport * from './viewModels/timelineGroupViewModel';\nexport * from './viewModels/timelineKeyframeViewModel';\nexport * from './viewModels/timelineRowViewModel';\nexport * from './viewModels/timelineViewModel';\n\n// @public events\nexport * from './utils/events/timelineKeyframeChangedEvent';\nexport * from './utils/events/timelineTimeChangedEvent';\nexport * from './utils/events/timelineSelectedEvent';\nexport * from './utils/events/timelineScrollEvent';\nexport * from './utils/events/timelineClickEvent';\nexport * from './utils/events/timelineDragEvent';\n\n// @public enums\nexport * from './enums/timelineKeyframeShape';\nexport * from './enums/timelineInteractionMode';\nexport * from './enums/timelineScrollSource';\nexport * from './enums/timelineElementType';\nexport * from './enums/timelineCursorType';\nexport * from './enums/timelineCapShape';\nexport * from './enums/timelineEventSource';\nexport * from './enums/timelineSelectionMode';\nexport * from './enums/timelineEvents';\n// @private defaults are exposed:\nexport * from './settings/defaults/defaultTimelineStyle';\nexport * from './settings/defaults/defaultTimelineRowStyle';\nexport * from './settings/defaults/defaultTimelineOptions';\nexport * from './settings/defaults/defaultTimelineKeyframeStyle';\nexport * from './settings/defaults/defaultTimelineConsts';\nexport * from './settings/defaults/defaultGroupStyle';\n"],"names":["TimelineEventsEmitter","_classCallCheck","_defineProperty","_createClass","key","value","on","topic","callback","_subscriptions","push","off","before","length","filter","event","offAll","emit","args","forEach","TimelineKeyframeShape","denominators","TimelineUtils","drawLine","ctx","x1","y1","x2","y2","moveTo","lineTo","isNumber","val","isNaN","Number","isFinite","deleteElement","array","element","index","indexOf","splice","isOverlap","x","y","rectangle","width","height","findGoodStep","originalStep","divisionCheck","arguments","undefined","step","lastDistance","pow","getPowArgument","i","denominator","calculatedStep","Math","distance","getDistance","keepInBounds","min","max","setMinMax","to","from","shrink","fromMin","NaN","toMin","isFromMinNumber","isToMinNumber","fromMax","toMax","isFromMaxNumber","isToMaxNumber","shrinkSelf","rect","isRectIntersects","rect2","touch","console","log","right","bottom","sqrt","abs","sign","p","clearBrowserSelection","window","getSelection","selection","removeAllRanges","doc","document","empty","toCheck","category","s","floor","zerosCount","mergeOptions","previousOptions","newOptions","toArg","cloneOptions","mergeOptionsDeep","Object","prototype","hasOwnProperty","call","_typeof","timePadZero","num","len","str","String","threshold","concat","JSON","parse","stringify","clonedValue","id","defaultRowHeight","margin","defaultGroupStyle","marginTop","fillColor","defaultTimelineKeyframeStyle","shape","Rhomb","selectedFillColor","strokeColor","selectedStrokeColor","strokeThickness","defaultTimelineRowStyle","marginBottom","keyframesStyle","groupsStyle","undefinedConst","TimelineStyleUtils","getGroup","groupModel","style","getGroupStyle","_TimelineStyleUtils$g","getFirstSet","defaultValue","_len","params","Array","_key","getValue","apply","returnFalseIfAnyFalse","valuesFound","found","_len2","_key2","toReturn","getValueOrDefault","keyframeWidth","keyframe","group","rowStyle","options","_keyframe$style","_TimelineStyleUtils$g2","_rowStyle$keyframesSt","_rowStyle$groupsStyle","_options$rowsStyle","_options$rowsStyle2","rowsStyle","keyframeHeight","_keyframe$style2","_TimelineStyleUtils$g3","_rowStyle$keyframesSt2","_rowStyle$groupsStyle2","_options$rowsStyle3","_options$rowsStyle4","keyframeShape","_keyframe$style3","_TimelineStyleUtils$g4","_rowStyle$groupsStyle3","_rowStyle$keyframesSt3","_options$rowsStyle5","_options$rowsStyle6","keyframeFillColor","_keyframe$style4","_TimelineStyleUtils$g5","_rowStyle$groupsStyle4","_rowStyle$keyframesSt4","_options$rowsStyle7","_options$rowsStyle8","keyframeSelectedFillColor","_keyframe$style5","_TimelineStyleUtils$g6","_rowStyle$groupsStyle5","_rowStyle$keyframesSt5","_options$rowsStyle9","_options$rowsStyle10","keyframeStrokeThickness","_keyframe$style6","_TimelineStyleUtils$g7","_rowStyle$groupsStyle6","_rowStyle$keyframesSt6","_options$rowsStyle11","_options$rowsStyle12","keyframeStrokeColor","_keyframe$style7","_TimelineStyleUtils$g8","_rowStyle$groupsStyle7","_rowStyle$keyframesSt7","_options$rowsStyle13","_options$rowsStyle14","keyframeSelectedStrokeColor","_keyframe$style8","_TimelineStyleUtils$g9","_rowStyle$groupsStyle8","_rowStyle$keyframesSt8","_options$rowsStyle15","_options$rowsStyle16","groupHeight","_TimelineStyleUtils$g10","_rowStyle$groupsStyle9","_options$rowsStyle17","groupMarginTop","_TimelineStyleUtils$g11","_rowStyle$groupsStyle10","_options$rowsStyle18","groupFillColor","_TimelineStyleUtils$g12","_rowStyle$groupsStyle11","_options$rowsStyle19","getRowHeight","_options$rowsStyle20","getRowMarginBottom","_options$rowsStyle21","getRowFillColor","_options$rowsStyle22","headerHeight","keyframeDraggable","row","_TimelineStyleUtils$g13","findFirstNegativeBool","boolResult","draggable","keyframesDraggable","groupDraggable","_TimelineStyleUtils$g14","groupsDraggable","TimelineElementType","TimelineDraggableData","None","TimelineBaseEvent","preventDefault","_prevented","isPrevented","TimelineKeyframeChangedEvent","_TimelineBaseEvent","_callSuper","_inherits","TimelineEventSource","TimelineTimeChangedEvent","_this","User","TimelineSelectionEventSource","TimelineSelectedEvent","Keyframes","TimelineClickEvent","get","_this$point","point","pos","TimelineDragEvent","TimelineInteractionMode","TimelineCursorType","TimelineCapShape","TimelineSelectionMode","TimelineEvents","TimelineScrollSource","defaultTimelineConsts","autoPanSpeed","scrollByDragSpeed","clickDetectionMs","doubleClickTimeoutMs","scrollFinishedTimeoutMs","autoPanByScrollPadding","clickThreshold","clickDetectionMinRadius","autoPanSpeedLimit","defaultGroupHeight","defaultTimelineStyle","capStyle","capType","Rect","cursor","EWResize","defaultTimelineOptions","snapAllKeyframesOnMove","snapEnabled","timelineStyle","stepPx","stepVal","stepSmallPx","snapStep","leftMargin","headerFillColor","labelsColor","tickColor","selectionColor","font","zoom","zoomSpeed","zoomMin","zoomMax","controlKeyIsMetaKey","scrollContainerClass","timelineDraggable","MAX_VALUE","Timeline","_TimelineEventsEmitte","model","Selection","_model","Error","_generateContainers","_options","_setOptions","_subscribeComponentEvents","rescale","redraw","HTMLElement","_container","getElementById","_scrollContainer","createElement","_scrollContent","_canvas","getContext","innerHTML","position","cssText","appendChild","scrollBarWidth","offsetWidth","clientWidth","_ctx","_getCtx","_unsubscribeComponentEvents","addEventListener","_handleWheelEvent","_handleScrollEvent","_handleScrollMouseDownEvent","_handleKeyUp","_handleKeyDown","_handleBlurEvent","_handleWindowResizeEvent","_handleMouseDownEvent","_handleMouseMoveEvent","_handleMouseUpEvent","_this$_container","removeEventListener","warn","_stopAutoPan","_clearScrollFinishedTimer","_cleanUpSelection","_interactionMode","Zoom","_setZoomCursor","e","_controlKeyPressed","_setCursor","ZoomOut","ZoomIn","_scrollFinishedTimerRef","clearTimeout","_scrollAreaClickOrDragStarted","scrollProgrammatically","_scrollProgrammatically","setTimeout","_isPanStarted","_emitScrollEvent","ScrollFinished","_consts","metaKey","ctrlKey","mousePosArguments","_getMousePos","mousePos","_zoom","deltaY","scrollTop","direction","speed","deltaSpeed","_canvasClientWidth","diff","_fromScreen","_currentZoom","_setZoom","zoomCenter","valToPx","newScrollLeft","round","_rescaleInternal","ZoomMode","scrollLeft","_this$_scrollContaine","_this$_scrollContaine2","_this$_options","_this$_options2","prevZoom","getZoom","zoomSet","radius","_startPosMouseArgs","_trackMousePos","isDoubleClick","Date","now","_lastClickTime","_lastClickPoint","_scrollStartPos","_clickAllowed","onlyElements","NonInteractivePan","clickRadius","_getClickDetectionRadius","elements","elementFromPoint","target","_findDraggableElement","_get","_getPrototypeOf","DoubleClick","MouseDown","_clickTimeout","_currentPos","_drag","type","_setElementDragState","Keyframe","_target$keyframe","_startedDragWithCtrl","_startedDragWithShiftKey","shiftKey","selected","_selectInternal","getSelectedElements","map","Group","keyframes","isArray","_this$_drag","_convertToTimelineElement","state","prevVal","startedVal","buttons","_lastUsedArgs","touchEventArgs","isTouch","changedTouches","_selectionRect","_clickTimeoutIsOver","_selectionRectEnabled","isLeftClicked","isLeftButtonClicked","convertedVal","_setTimeInternal","offset","movedOffset","_moveElements","changed","eventArgs","_emitDragStartedEvent","_emitDragEvent","Pan","Grabbing","_scrollByPan","_scrollBySelectionOutOfBounds","Grab","Default","Pointer","_this$_options3","mouseArgs","_performClick","_getKeyframesByRectangle","selectionMode","Append","Normal","select","clientHeight","screenRect","keyframesModels","_forEachKeyframe","keyframeViewModel","intersects","size","drag","isChanged","_drag$target","_this$_options4","mode","Revert","selectionChanged","_this$_options5","source","Programmatically","_emitKeyframeChanged","rowModel","data","rowViewModel","getAllKeyframes","node","selectable","nodes","results","getSelectedKeyframes","nodesArray","_changeNodeState","selectedItems","exists","_emitKeyframesSelected","_intervalRef","setInterval","clearInterval","_autoPanLastActionDate","_leftMargin","px","pxToVal","steps","snapVal","ms","isSeconds","seconds","year","days","hours","minutes","_this$_options6","canvas","screenWidth","wasToVal","valDistance","fromVal","toVal","ceil","smallStep","lastTextStart","save","tickHeight","smallTickHeight","sharpPos","_getSharp","_toScreenPx","beginPath","setLineDash","lineWidth","strokeStyle","stroke","fillStyle","text","_formatUnitsText","textSize","measureText","textX","fillText","restore","nextSharpPos","_pixelRatio","rowsViewModels","keyframesViewModels","rows","rowAbsoluteHeight","hidden","rowHeight","currentRowY","rowSize","groupsViewModels","_rowViewModel$groupsV","groupViewModel","find","keyframeSize","_getKeyframePosition","groupRect","_getKeyframesGroupSize","viewModel","_generateViewModel","bounds","_cutBounds","fillRect","_renderGroupBounds","_rowViewModel$groupsV2","_rowViewModel$model","keyframeLaneColor","rectBounds","testOffset","minX","maxX","minY","maxY","_canvasClientHeight","_cutBoundsWhenOverlap","offsetW","offsetH","overlapY","overlapX","_rowViewModel$model2","_rowViewModel$model3","rowY","isAutoHeight","parseInt","isAutoMargin","xMin","xMax","_rowViewModel$model4","_rowViewModel$model5","_keyframeViewModel$gr","clip","keyframeColor","border","translate","rotate","PI","fill","Circle","arc","thickness","strokeRect","clearRect","timeLinePos","_val","yBottom","canvasHeight","_renderTimelineCap","_this$_options7","capSize","capHeight","Triangle","closePath","_window","requestAnimationFrame","_redrawInternal","scrollWidth","scrollToRightBounds","_renderBackground","_renderRows","_renderHeaderBackground","_renderTicks","_renderKeyframes","_renderSelectionRect","_renderTimeline","timelineEvent","TimeChanged","SetTimeMethod","toSet","classList","contains","add","background","_applyContainersStyles","clientX","clientY","radiusX","radiusY","getBoundingClientRect","scaleX","scaleY","left","top","setTransform","newWidth","newHeight","scrollMode","DefaultMode","_updateCanvasScale","_this$_scrollContaine3","additionalOffset","timelineGlobalPos","timelinePos","rightPosition","getClientWidth","ScrollBySelection","keyframeW","minWidthPx","minWidth","h","minHeight","filteredElements","_element$keyframe","_this$_options8","Row","getPriority","sortDraggable","a","b","prioA","prioB","sorted","_filterDraggableElements","sort","onlyTypes","_this$_options9","_timelineStyle$capSty","snap","_","isNextRow","rowOverlapped","_mousePosToVal","keyframesGroupOverlapped","groupElement","snapped","keyframePosRect","isMouseOver","extendedMouseRect","dist","includes","DragStarted","Drag","DragFinished","KeyframeChanged","Selected","Scroll","_this$_scrollContaine4","_this$_scrollContaine5","eventType","scrollEvent","scrollHeight","dragState","_getDragEventArgs","_preventDrag","forcePrevent","dragArgs","toStart","_setKeyframePos","prevPoint","draggableArguments","_toConsumableArray","initialize","_this2","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","_this2$_options","currentBounds","expectedKeyframeValue","newPosition","newValue","_calculatedModel$rows","calculatedModel","nextRow","keyframeIndex","clickArgs","originalVal","_this$_scrollStartPos","_this$_scrollStartPos2","startPos","_this$_scrollContaine6","getClientHeight","_this$_scrollContaine7","_emitDragFinishedEvent","_checkUpdateSpeedTooFast","start","scrollStartPos","offsetX","newLeft","speedX","speedY","isLeft","isRight","isTop","isBottom","_startAutoPan","scrollSpeedMultiplier","stops","stepsFit","minSteps","minOffset","_this$_scrollContaine8","set","_this$_scrollContaine9"],"sourceRoot":""}